% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{prediction}
\alias{prediction}
\title{Prediction with lifelihood estimations}
\usage{
prediction(
  object,
  parameter_name,
  newdata = NULL,
  type = c("link", "response"),
  se.fit = FALSE
)
}
\arguments{
\item{object}{output of \code{\link[=lifelihood]{lifelihood()}}}

\item{parameter_name}{A string specifying the name of the parameter for which to make the prediction. Must be one of \code{unique(lifelihoodResults$effects$parameter)}.}

\item{newdata}{Data for prediction. If absent, predictions are for the subjects used in the original fit.}

\item{type}{The type of the predicted value: if "response," it is on the original data scale; if "link," it is on the lifelihood scale.}

\item{se.fit}{Whether or not to include standard errors in the prediction.}
}
\value{
A vector containing the predicted values for the parameter.
}
\description{
S3 method to use to make prediction using fitted results from \code{\link[=lifelihood]{lifelihood()}}.
}
\examples{
df <- fakesample |>
  mutate(
    geno = as.factor(geno),
    type = as.factor(type)
  )

clutchs <- c(
  "clutch_start1", "clutch_end1", "clutch_size1",
  "clutch_start2", "clutch_end2", "clutch_size2"
)

dataLFH <- lifelihoodData(
  df = df,
  sex = "sex",
  sex_start = "sex_start",
  sex_end = "sex_end",
  maturity_start = "mat_start",
  maturity_end = "mat_end",
  clutchs = clutchs,
  death_start = "death_start",
  death_end = "death_end",
  covariates = c("geno", "type"),
  model_specs = c("gam", "lgn", "wei")
)

results <- lifelihood(
  lifelihoodData = dataLFH,
  path_config = get_config_path("config2"),
  seeds = c(1, 2, 3, 4),
  raise_estimation_warning = FALSE
)

prediction(results, "expt_death")
prediction(results, "expt_death", type = "response")

# predict on new data
newdata <- data.frame(
  type = c(1, 2, 0, 1, 2, 0),
  geno = c(0, 1, 0, 1, 0, 1)
)
newdata$type <- factor(newdata$type)
newdata$geno <- factor(newdata$geno)
prediction(results, "expt_death", newdata)
prediction(results, "expt_death", newdata, type = "response")
}
