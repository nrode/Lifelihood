[{"path":"https://nrode.github.io/Lifelihood/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 lifelihood authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/compilation.html","id":"setup-r-environment","dir":"Articles","previous_headings":"","what":"Setup R environment","title":"Compilation","text":", need inside package developing. : Clone project: Open project RStudio editor Install development dependencies: install necessary dependencies development, including Lifelihood , running: developing R package, use library(lifelihood), rather: allows use latest local version re-install package every time make change. check everything worked expected, run: run unit tests inside package. everything okay, print many things ends something like :","code":"git clone https://github.com/nrode/Lifelihood.git install.packages(c(\"devtools\", \"testthat\", \"roxygen2\", \"pkgdown\")) remotes::install_local(dependencies = TRUE) devtools::load_all() devtools::test() ══ Results ═══════════════════════════════════════════════ Duration: 4.8 s  [ FAIL 0 | WARN 0 | SKIP 0 | PASS 94 ]"},{"path":"https://nrode.github.io/Lifelihood/articles/compilation.html","id":"open-project-in-lazarus","dir":"Articles","previous_headings":"","what":"Open project in Lazarus","title":"Compilation","text":", open Lazarus select “Open project”. select file named lifelihood.lpi Lifelihood/source/lifelihood.lpi. Finally, need set output directory compiled file. need go Project > Project Options > Compiler Options > Paths. “Unit output directory (-FU)”, set path Lifelihood/inst/bin/new/. case full path : /Users/josephbarbier/Desktop/Lifelihood/inst/bin/new/. output files directory. , need take compiled file new/ directory (lifelihood.exe compile Windows, lifelihood compile Mac.) Take file, remove C2023 (gives either lifelihood.exe lifelihood) put inside Lifelihood/inst/bin/. need remove/overwrite previous compiled files. now able compile project Run > Compile.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"how-to-contribute","dir":"Articles","previous_headings":"","what":"How to Contribute","title":"Contributing","text":"reading article, recommend familiarizing overview Lifelihood works. document outlines guidelines steps contributing Lifelihood R package. Contributions community help improve functionality, address bugs, ensure Lifelihood remains robust --date. guide covers setting development environment, working Git, submitting changes. start contributing, ’ll need set local development environment can modify, build, test Lifelihood. Follow steps get started: Fork Repository Clone Fork Locally: run following command terminal, replacing yourusername GitHub username: Install Development Dependencies: install necessary dependencies development, including Lifelihood , running: R source code resides R/ directory, files included package. making changes, can verify everything works expected running: allows work lifelihood functions using latest local modifications. Documentation Lifelihood managed Roxygen2. add modify functions, update documentation running: Lifelihood includes suite unit tests located tests/ directory. tests help ensure changes don’t break existing functionality. Run tests using: Ensure tests pass submitting pull request. Adding new tests new features bug fixes highly encouraged. order ensure consistent code style, ’s recommend install Air, R formatter. documentation tutorials set IDE (RStudio, Positron, VS Code, etc). changes complete tested, submit pull request propose integrating main Lifelihood repository: Add, commit push branch fork GitHub: go project fork click “Open pull request” pop-. pull request (PR) opened, GitHub Actions automatically run checks validate changes. checks include testing codebase, ensuring consistent documentation, verifying cross-platform compatibility. can view status checks directly pull request interface.","code":"git clone https://github.com/yourusername/Lifelihood.git cd Lifelihood git remote add upstream https://github.com/nrode/Lifelihood git checkout -b feature-name install.packages(c(\"devtools\", \"testthat\", \"roxygen2\", \"pkgdown\")) remotes::install_local(dependencies = TRUE) devtools::load_all() devtools::document() devtools::test() git add -A git commit -m 'commit description' git push origin main"},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Contributing","text":"document outlines guidelines steps contributing Lifelihood R package. Contributions community help improve functionality, address bugs, ensure Lifelihood remains robust --date. guide covers setting development environment, working Git, submitting changes.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"setting-up-your-development-environment","dir":"Articles","previous_headings":"","what":"Setting Up Your Development Environment","title":"Contributing","text":"start contributing, ’ll need set local development environment can modify, build, test Lifelihood. Follow steps get started: Fork Repository Clone Fork Locally: run following command terminal, replacing yourusername GitHub username: Install Development Dependencies: install necessary dependencies development, including Lifelihood , running:","code":"git clone https://github.com/yourusername/Lifelihood.git cd Lifelihood git remote add upstream https://github.com/nrode/Lifelihood git checkout -b feature-name install.packages(c(\"devtools\", \"testthat\", \"roxygen2\", \"pkgdown\")) remotes::install_local(dependencies = TRUE)"},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"make-changes","dir":"Articles","previous_headings":"","what":"Make changes","title":"Contributing","text":"R source code resides R/ directory, files included package. making changes, can verify everything works expected running: allows work lifelihood functions using latest local modifications.","code":"devtools::load_all()"},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"documenting","dir":"Articles","previous_headings":"","what":"Documenting","title":"Contributing","text":"Documentation Lifelihood managed Roxygen2. add modify functions, update documentation running:","code":"devtools::document()"},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"testing-and-validation","dir":"Articles","previous_headings":"","what":"Testing and Validation","title":"Contributing","text":"Lifelihood includes suite unit tests located tests/ directory. tests help ensure changes don’t break existing functionality. Run tests using: Ensure tests pass submitting pull request. Adding new tests new features bug fixes highly encouraged.","code":"devtools::test()"},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"code-format","dir":"Articles","previous_headings":"","what":"Code format","title":"Contributing","text":"order ensure consistent code style, ’s recommend install Air, R formatter. documentation tutorials set IDE (RStudio, Positron, VS Code, etc).","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/contributing.html","id":"submitting-a-pull-request-pr","dir":"Articles","previous_headings":"","what":"Submitting a Pull Request (PR)","title":"Contributing","text":"changes complete tested, submit pull request propose integrating main Lifelihood repository: Add, commit push branch fork GitHub: go project fork click “Open pull request” pop-. pull request (PR) opened, GitHub Actions automatically run checks validate changes. checks include testing codebase, ensuring consistent documentation, verifying cross-platform compatibility. can view status checks directly pull request interface.","code":"git add -A git commit -m 'commit description' git push origin main"},{"path":"https://nrode.github.io/Lifelihood/articles/customize-parameter-boundaries-and-estimation-warning.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"Customize parameter boundaries and estimation warning","text":"","code":"library(lifelihood) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.2     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"https://nrode.github.io/Lifelihood/articles/customize-parameter-boundaries-and-estimation-warning.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Customize parameter boundaries and estimation warning","text":"Load dataset .csv file: Prepare input parameters lifelihood() function: Note: large number clutches, easier generate vector programmatically, particularly dataset contains large number clutches. See Generate clutch names vignette.","code":"# input data df <- fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   ) # name of the columns of the clutchs into a single vector clutchs <- c(   \"clutch_start1\",   \"clutch_end1\",   \"clutch_size1\",   \"clutch_start2\",   \"clutch_end2\",   \"clutch_size2\" )"},{"path":"https://nrode.github.io/Lifelihood/articles/customize-parameter-boundaries-and-estimation-warning.html","id":"create-the-lifelihooddata-object","dir":"Articles","previous_headings":"","what":"Create the lifelihoodData object","title":"Customize parameter boundaries and estimation warning","text":"","code":"dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )"},{"path":"https://nrode.github.io/Lifelihood/articles/customize-parameter-boundaries-and-estimation-warning.html","id":"get-the-results","dir":"Articles","previous_headings":"","what":"Get the results","title":"Customize parameter boundaries and estimation warning","text":"Let’s run analysis default parameters.","code":"results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\") ) #> lifelihood Pascal program status code 0 #> Warning in check_valid_estimation(results): Estimation of 'expt_death' is close #> to the minimum bound: expt_death~=0.001. Consider decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'ratio_expt_death' is #> close to the minimum bound: ratio_expt_death~=0.0100000099772951. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'maturity_shape' is #> close to the minimum bound: maturity_shape~=0.00500000306682385. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'ratio_expt_maturity' #> is close to the minimum bound: ratio_expt_maturity~=0.01. Consider decreasing #> minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'pontn' is close to #> the minimum bound: pontn~=1.00000000000676. Consider decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of #> 'quad_decrease_hazard' is close to the maximum bound: #> quad_decrease_hazard~=9.97070698364166. Consider increasing maximum bound. #> Warning in check_valid_estimation(results): Estimation of #> 'quad_change_n_offspring' is close to the maximum bound: #> quad_change_n_offspring~=9.99777721010384. Consider increasing maximum bound."},{"path":"https://nrode.github.io/Lifelihood/articles/customize-parameter-boundaries-and-estimation-warning.html","id":"warning","dir":"Articles","previous_headings":"","what":"Warning","title":"Customize parameter boundaries and estimation warning","text":"runnning lifelihood() function, might encounter following warning: warning indicates estimation increase_death_hazard parameter close maximum bound. error, signal estimation increase_death_hazard parameter approaching upper limit. optimization process, algorithm may constrained current parameter boundaries, potentially affecting accuracy estimation. address warning, can consider increasing maximum bound increase_death_hazard parameter. give optimization algorithm flexibility find best estimate. can get parameter boundaries default_bounds_df() function passing lifelihoodData object: Since 10 seems high enough, let’s try 80: ’s changed, just call lifelihood() param_bounds_df argument: Now don’t get warning!","code":"## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'increase_death_hazard' is close to the maximum bound: ## increase_death_hazard≃9.9864992332278. Consider increasing maximum bound. bounds_df <- default_bounds_df(dataLFH) bounds_df[bounds_df$name == \"increase_death_hazard\", \"max\"] <- 80 results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   param_bounds_df = bounds_df ) #> lifelihood Pascal program status code 0 #> Warning in check_valid_estimation(results): Estimation of 'expt_death' is close #> to the minimum bound: expt_death~=0.00100000000021401. Consider decreasing #> minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'survival_shape' is #> close to the minimum bound: survival_shape~=0.05. Consider decreasing minimum #> bound. #> Warning in check_valid_estimation(results): Estimation of 'ratio_expt_death' is #> close to the minimum bound: ratio_expt_death~=0.0100001391868572. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'prob_death' is close #> to the minimum bound: prob_death~=1.00000263107838e-05. Consider decreasing #> minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'expt_maturity' is #> close to the maximum bound: expt_maturity~=7.99998958553422. Consider #> increasing maximum bound. #> Warning in check_valid_estimation(results): Estimation of 'maturity_shape' is #> close to the minimum bound: maturity_shape~=0.00500000137827198. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'ratio_expt_maturity' #> is close to the minimum bound: ratio_expt_maturity~=0.010000000002692. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'pontn' is close to #> the minimum bound: pontn~=1. Consider decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of #> 'increase_death_hazard' is close to the minimum bound: #> increase_death_hazard~=1.00000000000051e-05. Consider decreasing minimum bound."},{"path":"https://nrode.github.io/Lifelihood/articles/customize-parameter-boundaries-and-estimation-warning.html","id":"what-is-it","dir":"Articles","previous_headings":"","what":"What is it?","title":"Customize parameter boundaries and estimation warning","text":"runnning lifelihood() function, might encounter following warning: warning indicates estimation increase_death_hazard parameter close maximum bound. error, signal estimation increase_death_hazard parameter approaching upper limit. optimization process, algorithm may constrained current parameter boundaries, potentially affecting accuracy estimation. address warning, can consider increasing maximum bound increase_death_hazard parameter. give optimization algorithm flexibility find best estimate.","code":"## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'increase_death_hazard' is close to the maximum bound: ## increase_death_hazard≃9.9864992332278. Consider increasing maximum bound."},{"path":"https://nrode.github.io/Lifelihood/articles/customize-parameter-boundaries-and-estimation-warning.html","id":"customize-parameter-boundaries","dir":"Articles","previous_headings":"","what":"Customize parameter boundaries","title":"Customize parameter boundaries and estimation warning","text":"can get parameter boundaries default_bounds_df() function passing lifelihoodData object: Since 10 seems high enough, let’s try 80: ’s changed, just call lifelihood() param_bounds_df argument: Now don’t get warning!","code":"bounds_df <- default_bounds_df(dataLFH) bounds_df[bounds_df$name == \"increase_death_hazard\", \"max\"] <- 80 results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   param_bounds_df = bounds_df ) #> lifelihood Pascal program status code 0 #> Warning in check_valid_estimation(results): Estimation of 'expt_death' is close #> to the minimum bound: expt_death~=0.00100000000021401. Consider decreasing #> minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'survival_shape' is #> close to the minimum bound: survival_shape~=0.05. Consider decreasing minimum #> bound. #> Warning in check_valid_estimation(results): Estimation of 'ratio_expt_death' is #> close to the minimum bound: ratio_expt_death~=0.0100001391868572. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'prob_death' is close #> to the minimum bound: prob_death~=1.00000263107838e-05. Consider decreasing #> minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'expt_maturity' is #> close to the maximum bound: expt_maturity~=7.99998958553422. Consider #> increasing maximum bound. #> Warning in check_valid_estimation(results): Estimation of 'maturity_shape' is #> close to the minimum bound: maturity_shape~=0.00500000137827198. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'ratio_expt_maturity' #> is close to the minimum bound: ratio_expt_maturity~=0.010000000002692. Consider #> decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of 'pontn' is close to #> the minimum bound: pontn~=1. Consider decreasing minimum bound. #> Warning in check_valid_estimation(results): Estimation of #> 'increase_death_hazard' is close to the minimum bound: #> increase_death_hazard~=1.00000000000051e-05. Consider decreasing minimum bound."},{"path":"https://nrode.github.io/Lifelihood/articles/generate-clutch-names.html","id":"load-libraries-data","dir":"Articles","previous_headings":"","what":"Load libraries & data","title":"Generate clutch names","text":"","code":"library(lifelihood) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.2     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors  df <- fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )"},{"path":"https://nrode.github.io/Lifelihood/articles/generate-clutch-names.html","id":"generate-clutch-names","dir":"Articles","previous_headings":"","what":"Generate clutch names","title":"Generate clutch names","text":"Let’s say clutch names looks like : clutch_start_1, clutch_end_1, clutch_size_1, clutch_start_2, clutch_end_2, clutch_size_2, . goes clutch_start_28, clutch_end_28, clutch_size_28. can generate vector following function: disadvantage technique clutch names specific pattern.","code":"generate_clutch_vector <- function(N) {   return(paste(     \"clutch\",     rep(c(\"start\", \"end\", \"size\"), N),     rep(1:N, each = 3),     sep = \"_\"   )) } clutchs <- generate_clutch_vector(28) clutchs #>  [1] \"clutch_start_1\"  \"clutch_end_1\"    \"clutch_size_1\"   \"clutch_start_2\"  #>  [5] \"clutch_end_2\"    \"clutch_size_2\"   \"clutch_start_3\"  \"clutch_end_3\"    #>  [9] \"clutch_size_3\"   \"clutch_start_4\"  \"clutch_end_4\"    \"clutch_size_4\"   #> [13] \"clutch_start_5\"  \"clutch_end_5\"    \"clutch_size_5\"   \"clutch_start_6\"  #> [17] \"clutch_end_6\"    \"clutch_size_6\"   \"clutch_start_7\"  \"clutch_end_7\"    #> [21] \"clutch_size_7\"   \"clutch_start_8\"  \"clutch_end_8\"    \"clutch_size_8\"   #> [25] \"clutch_start_9\"  \"clutch_end_9\"    \"clutch_size_9\"   \"clutch_start_10\" #> [29] \"clutch_end_10\"   \"clutch_size_10\"  \"clutch_start_11\" \"clutch_end_11\"   #> [33] \"clutch_size_11\"  \"clutch_start_12\" \"clutch_end_12\"   \"clutch_size_12\"  #> [37] \"clutch_start_13\" \"clutch_end_13\"   \"clutch_size_13\"  \"clutch_start_14\" #> [41] \"clutch_end_14\"   \"clutch_size_14\"  \"clutch_start_15\" \"clutch_end_15\"   #> [45] \"clutch_size_15\"  \"clutch_start_16\" \"clutch_end_16\"   \"clutch_size_16\"  #> [49] \"clutch_start_17\" \"clutch_end_17\"   \"clutch_size_17\"  \"clutch_start_18\" #> [53] \"clutch_end_18\"   \"clutch_size_18\"  \"clutch_start_19\" \"clutch_end_19\"   #> [57] \"clutch_size_19\"  \"clutch_start_20\" \"clutch_end_20\"   \"clutch_size_20\"  #> [61] \"clutch_start_21\" \"clutch_end_21\"   \"clutch_size_21\"  \"clutch_start_22\" #> [65] \"clutch_end_22\"   \"clutch_size_22\"  \"clutch_start_23\" \"clutch_end_23\"   #> [69] \"clutch_size_23\"  \"clutch_start_24\" \"clutch_end_24\"   \"clutch_size_24\"  #> [73] \"clutch_start_25\" \"clutch_end_25\"   \"clutch_size_25\"  \"clutch_start_26\" #> [77] \"clutch_end_26\"   \"clutch_size_26\"  \"clutch_start_27\" \"clutch_end_27\"   #> [81] \"clutch_size_27\"  \"clutch_start_28\" \"clutch_end_28\"   \"clutch_size_28\""},{"path":"https://nrode.github.io/Lifelihood/articles/how-to-use-lifelihood.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"How to use lifelihood","text":"","code":"library(lifelihood) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.2     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"https://nrode.github.io/Lifelihood/articles/how-to-use-lifelihood.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"How to use lifelihood","text":"Load dataset .csv file: Prepare input parameters lifelihoodData() function: Note: large number clutches, easier generate vector programmatically, particularly dataset contains large number clutches. See Generate clutch names vignette.","code":"# input data df <- fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   ) # name of the columns of the clutchs into a single vector clutchs <- c(   \"clutch_start1\",   \"clutch_end1\",   \"clutch_size1\",   \"clutch_start2\",   \"clutch_end2\",   \"clutch_size2\" )"},{"path":"https://nrode.github.io/Lifelihood/articles/how-to-use-lifelihood.html","id":"create-the-lifelihooddata-object","dir":"Articles","previous_headings":"","what":"Create the lifelihoodData object","title":"How to use lifelihood","text":"lifelihoodData() creates lifelihoodData object, list containing information needed run lifelihood program given dataset individual life history. function mostly takes input dataset, column names. also model_specs argument, vector characters name statistical law use. Must length 3 element must one \"wei\" (Weibull law), \"exp\" (Exponential law), \"gam\" (Gamma law) \"lgn\" (Log-normal law). first one used maturity, second one used clutchs third one death.","code":"dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )"},{"path":"https://nrode.github.io/Lifelihood/articles/how-to-use-lifelihood.html","id":"get-the-results","dir":"Articles","previous_headings":"","what":"Get the results","title":"How to use lifelihood","text":"created lifelihoodData object lifelihoodData(), can call lifelihood() function run lifelihood program. returns lifelihoodResults object, list containing results analysis. ’s minimalist usage function, specify lifelihoodData object, path configuration file seeds use. raise_estimation_warning argument focus next vignette.","code":"results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 summary(results) #> LIFELIHOOD RESULTS #>  #> Likelihood: #> [1] -594.6025 #>  #> Effects: #>                                       name  estimation stderror #> 1                           int_expt_death -11.9449429        0 #> 2                    eff_expt_death_geno_1 -12.2167414        0 #> 3                    eff_expt_death_type_1 -17.4578138        0 #> 4                    eff_expt_death_type_2  -9.5788906        0 #> 5                       int_survival_shape -12.4849939        0 #> 6                eff_survival_shape_geno_1 -19.7491969        0 #> 7                eff_survival_shape_type_1 -17.3748815        0 #> 8                eff_survival_shape_type_2   2.6682119        0 #> 9         eff_survival_shape_type_1:geno_1  -6.5460851        0 #> 10        eff_survival_shape_type_2:geno_1 -14.5649205        0 #> 11                    int_ratio_expt_death  -7.1006194        0 #> 12             eff_ratio_expt_death_geno_1  10.4608933        0 #> 13                          int_prob_death -10.4279891        0 #> 14                   eff_prob_death_geno_1 -11.3766401        0 #> 15                       int_expt_maturity   0.4246114        0 #> 16                eff_expt_maturity_geno_1  -0.5987078        0 #> 17                eff_expt_maturity_type_1  10.2893645        0 #> 18                eff_expt_maturity_type_2  -1.0230025        0 #> 19                      int_maturity_shape -19.5699810        0 #> 20               eff_maturity_shape_geno_1  -7.1923330        0 #> 21                 int_ratio_expt_maturity  14.5293003        0 #> 22          eff_ratio_expt_maturity_geno_1   8.0512975        0 #> 23          eff_ratio_expt_maturity_type_1  -2.0374967        0 #> 24          eff_ratio_expt_maturity_type_2  -7.0457527        0 #> 25                   int_expt_reproduction  -1.5884860        0 #> 26            eff_expt_reproduction_geno_1  11.6826788        0 #> 27                               int_pontn  -8.8326239        0 #> 28                        eff_pontn_geno_1 -19.9999601        0 #> 29               int_increase_death_hazard   9.3567346        0 #> 30        eff_increase_death_hazard_geno_1 -17.1122105        0 #> 31        eff_increase_death_hazard_type_1   4.6742563        0 #> 32        eff_increase_death_hazard_type_2  10.6544722        0 #> 33 eff_increase_death_hazard_type_1:geno_1  17.7414034        0 #> 34 eff_increase_death_hazard_type_2:geno_1   3.1766257        0 #> 35                  int_tof_reduction_date  -5.0608854        0 #> 36           eff_tof_reduction_date_geno_1  17.0587281        0 #> 37            int_increase_tof_n_offspring  -7.7631429        0 #> 38     eff_increase_tof_n_offspring_geno_1   1.0542894        0 #> 39                 int_lin_decrease_hazard   3.7536999        0 #> 40          eff_lin_decrease_hazard_geno_1   6.3045810        0 #> 41          eff_lin_decrease_hazard_type_1  -9.9093761        0 #> 42          eff_lin_decrease_hazard_type_2  10.2707608        0 #> 43   eff_lin_decrease_hazard_type_1:geno_1  10.5169971        0 #> 44   eff_lin_decrease_hazard_type_2:geno_1 -16.5269890        0 #> 45                     int_quad_senescence  16.0191401        0 #> 46              eff_quad_senescence_geno_1 -17.9411463        0 #> 47                int_quad_decrease_hazard -13.4062494        0 #> 48         eff_quad_decrease_hazard_geno_1  16.4551575        0 #> 49             int_quad_change_n_offspring   2.8626095        0 #> 50      eff_quad_change_n_offspring_geno_1  -1.0616118        0 #> 51                     int_tof_n_offspring  -5.2294123        0 #>                   parameter        kind        event #> 1                expt_death   intercept    mortality #> 2                expt_death coefficient    mortality #> 3                expt_death coefficient    mortality #> 4                expt_death coefficient    mortality #> 5            survival_shape   intercept    mortality #> 6            survival_shape coefficient    mortality #> 7            survival_shape coefficient    mortality #> 8            survival_shape coefficient    mortality #> 9            survival_shape coefficient    mortality #> 10           survival_shape coefficient    mortality #> 11         ratio_expt_death   intercept    mortality #> 12         ratio_expt_death coefficient    mortality #> 13               prob_death   intercept    mortality #> 14               prob_death coefficient    mortality #> 15            expt_maturity   intercept     maturity #> 16            expt_maturity coefficient     maturity #> 17            expt_maturity coefficient     maturity #> 18            expt_maturity coefficient     maturity #> 19           maturity_shape   intercept     maturity #> 20           maturity_shape coefficient     maturity #> 21      ratio_expt_maturity   intercept     maturity #> 22      ratio_expt_maturity coefficient     maturity #> 23      ratio_expt_maturity coefficient     maturity #> 24      ratio_expt_maturity coefficient     maturity #> 25        expt_reproduction   intercept reproduction #> 26        expt_reproduction coefficient reproduction #> 27                    pontn   intercept reproduction #> 28                    pontn coefficient reproduction #> 29    increase_death_hazard   intercept reproduction #> 30    increase_death_hazard coefficient reproduction #> 31    increase_death_hazard coefficient reproduction #> 32    increase_death_hazard coefficient reproduction #> 33    increase_death_hazard coefficient reproduction #> 34    increase_death_hazard coefficient reproduction #> 35       tof_reduction_date   intercept reproduction #> 36       tof_reduction_date coefficient reproduction #> 37 increase_tof_n_offspring   intercept reproduction #> 38 increase_tof_n_offspring coefficient reproduction #> 39      lin_decrease_hazard   intercept reproduction #> 40      lin_decrease_hazard coefficient reproduction #> 41      lin_decrease_hazard coefficient reproduction #> 42      lin_decrease_hazard coefficient reproduction #> 43      lin_decrease_hazard coefficient reproduction #> 44      lin_decrease_hazard coefficient reproduction #> 45          quad_senescence   intercept reproduction #> 46          quad_senescence coefficient reproduction #> 47     quad_decrease_hazard   intercept reproduction #> 48     quad_decrease_hazard coefficient reproduction #> 49  quad_change_n_offspring   intercept reproduction #> 50  quad_change_n_offspring coefficient reproduction #> 51          tof_n_offspring   intercept reproduction"},{"path":"https://nrode.github.io/Lifelihood/articles/how-to-use-lifelihood.html","id":"all-default-parameters","dir":"Articles","previous_headings":"","what":"All default parameters","title":"How to use lifelihood","text":"created lifelihoodData object lifelihoodData(), can call lifelihood() function run lifelihood program. returns lifelihoodResults object, list containing results analysis. ’s minimalist usage function, specify lifelihoodData object, path configuration file seeds use. raise_estimation_warning argument focus next vignette.","code":"results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 summary(results) #> LIFELIHOOD RESULTS #>  #> Likelihood: #> [1] -594.6025 #>  #> Effects: #>                                       name  estimation stderror #> 1                           int_expt_death -11.9449429        0 #> 2                    eff_expt_death_geno_1 -12.2167414        0 #> 3                    eff_expt_death_type_1 -17.4578138        0 #> 4                    eff_expt_death_type_2  -9.5788906        0 #> 5                       int_survival_shape -12.4849939        0 #> 6                eff_survival_shape_geno_1 -19.7491969        0 #> 7                eff_survival_shape_type_1 -17.3748815        0 #> 8                eff_survival_shape_type_2   2.6682119        0 #> 9         eff_survival_shape_type_1:geno_1  -6.5460851        0 #> 10        eff_survival_shape_type_2:geno_1 -14.5649205        0 #> 11                    int_ratio_expt_death  -7.1006194        0 #> 12             eff_ratio_expt_death_geno_1  10.4608933        0 #> 13                          int_prob_death -10.4279891        0 #> 14                   eff_prob_death_geno_1 -11.3766401        0 #> 15                       int_expt_maturity   0.4246114        0 #> 16                eff_expt_maturity_geno_1  -0.5987078        0 #> 17                eff_expt_maturity_type_1  10.2893645        0 #> 18                eff_expt_maturity_type_2  -1.0230025        0 #> 19                      int_maturity_shape -19.5699810        0 #> 20               eff_maturity_shape_geno_1  -7.1923330        0 #> 21                 int_ratio_expt_maturity  14.5293003        0 #> 22          eff_ratio_expt_maturity_geno_1   8.0512975        0 #> 23          eff_ratio_expt_maturity_type_1  -2.0374967        0 #> 24          eff_ratio_expt_maturity_type_2  -7.0457527        0 #> 25                   int_expt_reproduction  -1.5884860        0 #> 26            eff_expt_reproduction_geno_1  11.6826788        0 #> 27                               int_pontn  -8.8326239        0 #> 28                        eff_pontn_geno_1 -19.9999601        0 #> 29               int_increase_death_hazard   9.3567346        0 #> 30        eff_increase_death_hazard_geno_1 -17.1122105        0 #> 31        eff_increase_death_hazard_type_1   4.6742563        0 #> 32        eff_increase_death_hazard_type_2  10.6544722        0 #> 33 eff_increase_death_hazard_type_1:geno_1  17.7414034        0 #> 34 eff_increase_death_hazard_type_2:geno_1   3.1766257        0 #> 35                  int_tof_reduction_date  -5.0608854        0 #> 36           eff_tof_reduction_date_geno_1  17.0587281        0 #> 37            int_increase_tof_n_offspring  -7.7631429        0 #> 38     eff_increase_tof_n_offspring_geno_1   1.0542894        0 #> 39                 int_lin_decrease_hazard   3.7536999        0 #> 40          eff_lin_decrease_hazard_geno_1   6.3045810        0 #> 41          eff_lin_decrease_hazard_type_1  -9.9093761        0 #> 42          eff_lin_decrease_hazard_type_2  10.2707608        0 #> 43   eff_lin_decrease_hazard_type_1:geno_1  10.5169971        0 #> 44   eff_lin_decrease_hazard_type_2:geno_1 -16.5269890        0 #> 45                     int_quad_senescence  16.0191401        0 #> 46              eff_quad_senescence_geno_1 -17.9411463        0 #> 47                int_quad_decrease_hazard -13.4062494        0 #> 48         eff_quad_decrease_hazard_geno_1  16.4551575        0 #> 49             int_quad_change_n_offspring   2.8626095        0 #> 50      eff_quad_change_n_offspring_geno_1  -1.0616118        0 #> 51                     int_tof_n_offspring  -5.2294123        0 #>                   parameter        kind        event #> 1                expt_death   intercept    mortality #> 2                expt_death coefficient    mortality #> 3                expt_death coefficient    mortality #> 4                expt_death coefficient    mortality #> 5            survival_shape   intercept    mortality #> 6            survival_shape coefficient    mortality #> 7            survival_shape coefficient    mortality #> 8            survival_shape coefficient    mortality #> 9            survival_shape coefficient    mortality #> 10           survival_shape coefficient    mortality #> 11         ratio_expt_death   intercept    mortality #> 12         ratio_expt_death coefficient    mortality #> 13               prob_death   intercept    mortality #> 14               prob_death coefficient    mortality #> 15            expt_maturity   intercept     maturity #> 16            expt_maturity coefficient     maturity #> 17            expt_maturity coefficient     maturity #> 18            expt_maturity coefficient     maturity #> 19           maturity_shape   intercept     maturity #> 20           maturity_shape coefficient     maturity #> 21      ratio_expt_maturity   intercept     maturity #> 22      ratio_expt_maturity coefficient     maturity #> 23      ratio_expt_maturity coefficient     maturity #> 24      ratio_expt_maturity coefficient     maturity #> 25        expt_reproduction   intercept reproduction #> 26        expt_reproduction coefficient reproduction #> 27                    pontn   intercept reproduction #> 28                    pontn coefficient reproduction #> 29    increase_death_hazard   intercept reproduction #> 30    increase_death_hazard coefficient reproduction #> 31    increase_death_hazard coefficient reproduction #> 32    increase_death_hazard coefficient reproduction #> 33    increase_death_hazard coefficient reproduction #> 34    increase_death_hazard coefficient reproduction #> 35       tof_reduction_date   intercept reproduction #> 36       tof_reduction_date coefficient reproduction #> 37 increase_tof_n_offspring   intercept reproduction #> 38 increase_tof_n_offspring coefficient reproduction #> 39      lin_decrease_hazard   intercept reproduction #> 40      lin_decrease_hazard coefficient reproduction #> 41      lin_decrease_hazard coefficient reproduction #> 42      lin_decrease_hazard coefficient reproduction #> 43      lin_decrease_hazard coefficient reproduction #> 44      lin_decrease_hazard coefficient reproduction #> 45          quad_senescence   intercept reproduction #> 46          quad_senescence coefficient reproduction #> 47     quad_decrease_hazard   intercept reproduction #> 48     quad_decrease_hazard coefficient reproduction #> 49  quad_change_n_offspring   intercept reproduction #> 50  quad_change_n_offspring coefficient reproduction #> 51          tof_n_offspring   intercept reproduction"},{"path":"https://nrode.github.io/Lifelihood/articles/how-to-use-lifelihood.html","id":"get-specific-results","dir":"Articles","previous_headings":"","what":"Get specific results","title":"How to use lifelihood","text":"lifelihoodResults object list containing results analysis. can get specific results calling list element. Get estimations: Get maximum likelihood found:","code":"results$effects results$likelihood #> [1] -594.6025"},{"path":"https://nrode.github.io/Lifelihood/articles/how-to-use-lifelihood.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next step","title":"How to use lifelihood","text":"Now seen use package, can go customise parameter boundaries deal estimation warnings.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"load-lifelihood","dir":"Articles","previous_headings":"","what":"Load lifelihood","title":"Overview of all features in lifelihood","text":"","code":"library(lifelihood) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.2     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"data-prepration","dir":"Articles","previous_headings":"","what":"Data prepration","title":"Overview of all features in lifelihood","text":"","code":"df <- datapierrick |>   mutate(     geno = as.factor(geno),     par = as.factor(par),     spore = as.factor(spore)   )  generate_clutch_vector <- function(N) {   return(paste(     \"pon\",     rep(c(\"start\", \"end\", \"size\"), N),     rep(1:N, each = 3),     sep = \"_\"   )) } clutchs <- generate_clutch_vector(28) df |> head() #>   par geno spore sex_start sex_end sex mat_start mat_end mat pon_start_1 #> 1   0    0     0        13    1000   0        12      13   6          20 #> 2   0    0     0        13    1000   0        12      13   3          19 #> 3   0    0     0        15    1000   0        14      15   1          18 #> 4   0    0     0        14    1000   0        13      14   6          20 #> 5   0    0     0        19    1000   0        18      19   2          21 #> 6   0    0     0        12    1000   0        11      12   1          18 #>   pon_end_1 pon_size_1 pon_start_2 pon_end_2 pon_size_2 pon_start_3 pon_end_3 #> 1        21          3          23        24          9          26        27 #> 2        20          5          23        24          6          27        28 #> 3        19          5          22        23         10          25        26 #> 4        21          7          24        25          6          27        28 #> 5        22          9          25        26          6          29        30 #> 6        19          6          23        24          6          26        27 #>   pon_size_3 pon_start_4 pon_end_4 pon_size_4 pon_start_5 pon_end_5 pon_size_5 #> 1          3          30        31          2          33        34          8 #> 2          3          31        32          6          35        36          9 #> 3          5          29        30          5          33        34          6 #> 4          5          31        32          8          35        36          8 #> 5          6          33        34          6          38        39          3 #> 6          4          30        31          4          34        35          5 #>   pon_start_6 pon_end_6 pon_size_6 pon_start_7 pon_end_7 pon_size_7 pon_start_8 #> 1          37        38          5          41        42          5          45 #> 2          39        40          9          43        44          4          47 #> 3          37        38          4          41        42          8          45 #> 4          39        40          7          43        44          7          47 #> 5          41        42          9          45        46          6          49 #> 6          38        39          8          42        43          6          46 #>   pon_end_8 pon_size_8 pon_start_9 pon_end_9 pon_size_9 pon_start_10 pon_end_10 #> 1        46          7          48        49          3           53         54 #> 2        48          7          51        52          2           56         57 #> 3        46          6          49        50          3           54         55 #> 4        48          8          51        52          5           57         58 #> 5        50          2          54        55          3           58         59 #> 6        47          7          51        52          5           56         57 #>   pon_size_10 pon_start_11 pon_end_11 pon_size_11 pon_start_12 pon_end_12 #> 1           4           58         59           3           62         63 #> 2           3           60         61           4           65         66 #> 3           2           57         58           4           62         63 #> 4           3           61         62           2           65         66 #> 5           6           65         66           1           68         69 #> 6           4           60         61           4           65         66 #>   pon_size_12 pon_start_13 pon_end_13 pon_size_13 pon_start_14 pon_end_14 #> 1           4           67         68           3           72         73 #> 2           3           70         71           2           74         75 #> 3           5           66         67           3           72         73 #> 4           3           NA         NA          NA           NA         NA #> 5           4           73         74           2           77         78 #> 6           2           NA         NA          NA           NA         NA #>   pon_size_14 pon_start_15 pon_end_15 pon_size_15 pon_start_16 pon_end_16 #> 1           2           77         78           2           82         83 #> 2           7           80         81           3           84         85 #> 3           2           76         77           5           NA         NA #> 4          NA           NA         NA          NA           NA         NA #> 5           2           82         83           4           87         88 #> 6          NA           NA         NA          NA           NA         NA #>   pon_size_16 pon_start_17 pon_end_17 pon_size_17 pon_start_18 pon_end_18 #> 1           2           87         88           3           92         93 #> 2           2           90         91           1           NA         NA #> 3          NA           NA         NA          NA           NA         NA #> 4          NA           NA         NA          NA           NA         NA #> 5           2           93         94           2           97         98 #> 6          NA           NA         NA          NA           NA         NA #>   pon_size_18 pon_start_19 pon_end_19 pon_size_19 pon_start_20 pon_end_20 #> 1           3           97         98           3           NA         NA #> 2          NA           NA         NA          NA           NA         NA #> 3          NA           NA         NA          NA           NA         NA #> 4          NA           NA         NA          NA           NA         NA #> 5           6          103        104           3          124        125 #> 6          NA           NA         NA          NA           NA         NA #>   pon_size_20 pon_start_21 pon_end_21 pon_size_21 pon_start_22 pon_end_22 #> 1          NA           NA         NA          NA           NA         NA #> 2          NA           NA         NA          NA           NA         NA #> 3          NA           NA         NA          NA           NA         NA #> 4          NA           NA         NA          NA           NA         NA #> 5           4          128        129           4           NA         NA #> 6          NA           NA         NA          NA           NA         NA #>   pon_size_22 pon_start_23 pon_end_23 pon_size_23 pon_start_24 pon_end_24 #> 1          NA           NA         NA          NA           NA         NA #> 2          NA           NA         NA          NA           NA         NA #> 3          NA           NA         NA          NA           NA         NA #> 4          NA           NA         NA          NA           NA         NA #> 5          NA           NA         NA          NA           NA         NA #> 6          NA           NA         NA          NA           NA         NA #>   pon_size_24 pon_start_25 pon_end_25 pon_size_25 pon_start_26 pon_end_26 #> 1          NA           NA         NA          NA           NA         NA #> 2          NA           NA         NA          NA           NA         NA #> 3          NA           NA         NA          NA           NA         NA #> 4          NA           NA         NA          NA           NA         NA #> 5          NA           NA         NA          NA           NA         NA #> 6          NA           NA         NA          NA           NA         NA #>   pon_size_26 pon_start_27 pon_end_27 pon_size_27 pon_start_28 pon_end_28 #> 1          NA           NA         NA          NA           NA         NA #> 2          NA           NA         NA          NA           NA         NA #> 3          NA           NA         NA          NA           NA         NA #> 4          NA           NA         NA          NA           NA         NA #> 5          NA           NA         NA          NA           NA         NA #> 6          NA           NA         NA          NA           NA         NA #>   pon_size_28 death_start death_end #> 1          NA         102       103 #> 2          NA          95        96 #> 3          NA          78        79 #> 4          NA          66        67 #> 5          NA         135       136 #> 6          NA          74        75"},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"creata-a-data-lifelihood-object","dir":"Articles","previous_headings":"","what":"Creata a data lifelihood object","title":"Overview of all features in lifelihood","text":"","code":"dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"par\", \"spore\"),   model_specs = c(\"wei\", \"lgn\", \"wei\") )"},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"estimation","dir":"Articles","previous_headings":"","what":"Estimation","title":"Overview of all features in lifelihood","text":"","code":"results <- dataLFH |>   lifelihood(     path_config = get_config_path(\"config_pierrick\"),     MCMC = 3,     delete_temp_files = FALSE   ) #> lifelihood Pascal program status code 0 #> [1] \"Intermediate files are stored at: /private/var/folders/y6/nj790rtn62lfktb1sh__79hc0000gn/T/Rtmp5CdUCp/pkgdown-quarto-1d29b499d27/lifelihood_5964_291_3927_8369\""},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"aic-bic","dir":"Articles","previous_headings":"","what":"AIC & BIC","title":"Overview of all features in lifelihood","text":"","code":"AIC(results, \"expt_death\") #> [1] 687576.8 BIC(results, \"expt_death\") #> [1] 687607"},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"summary-results","dir":"Articles","previous_headings":"","what":"Summary results","title":"Overview of all features in lifelihood","text":"","code":"coeff(results, \"expt_death\") #>         int_expt_death   eff_expt_death_par_1   eff_expt_death_par_2  #>            -2.17826031             0.57080473             0.80054495  #> eff_expt_death_spore_1 eff_expt_death_spore_2 eff_expt_death_spore_3  #>            -0.18867545            -0.02379481            -0.40742233 logLik(results) #> [1] -343781.4 results$effects #>                     name  estimation stderror      parameter        kind #> 1         int_expt_death -2.17826031        0     expt_death   intercept #> 2   eff_expt_death_par_1  0.57080473        0     expt_death coefficient #> 3   eff_expt_death_par_2  0.80054495        0     expt_death coefficient #> 4 eff_expt_death_spore_1 -0.18867545        0     expt_death coefficient #> 5 eff_expt_death_spore_2 -0.02379481        0     expt_death coefficient #> 6 eff_expt_death_spore_3 -0.40742233        0     expt_death coefficient #> 7     int_survival_shape -4.89573862        0 survival_shape   intercept #>       event #> 1 mortality #> 2 mortality #> 3 mortality #> 4 mortality #> 5 mortality #> 6 mortality #> 7 mortality results$mcmc #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 3  #> Thinning interval = 1  #>             LL int_expt_death eff_expt_death_par_1 eff_expt_death_par_2 #> [1,] -343783.1      -2.067545            0.3826362            0.7170352 #> [2,] -343785.3      -2.151390            0.4828881            0.7145234 #> [3,] -343786.5      -2.178260            0.5708047            0.8005450 #>      eff_expt_death_spore_1 eff_expt_death_spore_2 eff_expt_death_spore_3 #> [1,]            -0.04700038             0.03770440             -0.2884613 #> [2,]            -0.09777289             0.03847022             -0.1616046 #> [3,]            -0.18867545            -0.02379481             -0.4074223 #>      int_survival_shape #> [1,]          -4.791967 #> [2,]          -4.784840 #> [3,]          -4.895739 results$vcov #> # A tibble: 3 × 7 #>   int_expt_death eff_expt_death_par_1 eff_expt_death_par_2 #>            <dbl>                <dbl>                <dbl> #> 1          -2.07                0.383                0.717 #> 2          -2.15                0.483                0.715 #> 3          -2.18                0.571                0.801 #> # ℹ 4 more variables: eff_expt_death_spore_1 <dbl>, #> #   eff_expt_death_spore_2 <dbl>, eff_expt_death_spore_3 <dbl>, #> #   int_survival_shape <dbl>"},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"prediction-on-new-data","dir":"Articles","previous_headings":"","what":"Prediction on new data","title":"Overview of all features in lifelihood","text":"","code":"newdata <- tibble(   par = c(0, 1, 2, 0, 1, 2, 1),   spore = c(0, 1, 2, 1, 0, 1, 1) ) |>   mutate(     par = as.factor(par),     spore = as.factor(spore)   )  prediction(results, \"expt_death\", newdata) #>        [,1] #> 1 -2.178260 #> 2 -1.796131 #> 3 -1.401510 #> 4 -2.366936 #> 5 -1.607456 #> 6 -1.566391 #> 7 -1.796131 prediction(results, \"expt_death\", newdata, type = \"response\") #>       [,1] #> 1 32.95811 #> 2 46.11341 #> 3 64.01561 #> 4 27.77711 #> 5 54.09010 #> 6 55.96584 #> 7 46.11341"},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Overview of all features in lifelihood","text":"Observed mortality rate   Fitted mortality rate","code":"plot_observed_mortality_rate(   dataLFH,   interval_width = 20,   max_time = 170,   log_y = TRUE ) #> [1] TRUE #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`). plot_observed_mortality_rate(   dataLFH,   interval_width = 15,   max_time = 170,   log_y = TRUE,   groupby = \"spore\" ) #> [1] TRUE #> Warning in ggplot2::scale_y_log10(): log-10 transformation introduced infinite #> values. #> Warning: Removed 22 rows containing missing values or values outside the scale range #> (`geom_point()`). plot_fitted_mortality_rate(   results,   interval_width = 5,   groupby = c(\"spore\", \"par\") ) #> [1] FALSE #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`). plot_fitted_mortality_rate(   results,   newdata = newdata,   interval_width = 5,   groupby = \"spore\" ) #> [1] FALSE #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://nrode.github.io/Lifelihood/articles/lifelihood.html","id":"retrieve-mortality-rates","dir":"Articles","previous_headings":"","what":"Retrieve mortality rates","title":"Overview of all features in lifelihood","text":"can get","code":"df_mort_rates <- compute_mortality_rate(dataLFH, interval_width = 10)"},{"path":"https://nrode.github.io/Lifelihood/articles/overview.html","id":"how-lifelihood-works","dir":"Articles","previous_headings":"","what":"How Lifelihood Works","title":"Overview","text":"document provides overview internal workings Lifelihood R package. intended developers contributors wish understand extend package’s functionality. Lifelihood R package designed complex quantitative biology survival analysis calculations. achieve high computational performance, core calculations performed using Pascal code, integrated R package interface layer. package’s structure facilitates efficient interaction R Pascal, making scalable handling large datasets complex survival analysis models. Lifelihood package organized following primary components: R Interface: Provides user-facing functions set helper functions input validation, data preprocessing, postprocessing results. Pascal Backend: Manages core computational tasks survival analysis, allowing performance-optimized calculations challenging achieve solely R. Interface Layer: Facilitates communication R Pascal. key directories files package organized follows: vignettes/: Quarto files used documentation website. R/: Contains R functions, user interface code, helper functions. source/: Houses Pascal source code executables. one /lazarus/ used. inst/: Utility files used binary files config examples. man/: Documentation files function, generated via Roxygen2. tests/: Unit integration tests validating package functionality. DESCRIPTION: Provides metadata package (authors, version, description, etc.). NAMESPACE: Specifies functions exported Lifelihood. core calculations Lifelihood implemented Pascal optimize computational efficiency. ’s R Pascal components interact. Pascal program requires two different input txt files: configuration data file, example file. parameter boundaries file specifying range parameter, like example file. program outputs results file containing estimates, likelihoods, etc. example output format can found . Since program runs via command line, Lifelihood simplifies process managing steps. Lifelihood accepts large set arguments, generates necessary txt input files, passes program, reads output, formats . Unlike R, Pascal compiled programming language, meaning code must first compiled machine-readable format (binary) execution. Additionally, must compiled separately macOS Windows systems. / directory includes source (.pas) compiled files: lifelihood Unix systems (macOS) lifelihood.exe Windows utility function Lifelihood determines user’s operating system run appropriate executable. Pascal program uses Lazarus, supports cross-platform compilation, simplifying process building code macOS Windows.","code":"lifelihood/ ├── vignettes/ ├── R/ ├── source/ │   └── source_pascal/ │       ├── lazarus/ │       └── delphi/ ├── inst/ │   ├── bin/ │   └── configs/ ├── tests/ ├── man/ ├── DESCRIPTION ├── NAMESPACE └── ..."},{"path":"https://nrode.github.io/Lifelihood/articles/overview.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview","text":"Lifelihood R package designed complex quantitative biology survival analysis calculations. achieve high computational performance, core calculations performed using Pascal code, integrated R package interface layer. package’s structure facilitates efficient interaction R Pascal, making scalable handling large datasets complex survival analysis models.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/overview.html","id":"package-structure","dir":"Articles","previous_headings":"","what":"Package Structure","title":"Overview","text":"Lifelihood package organized following primary components: R Interface: Provides user-facing functions set helper functions input validation, data preprocessing, postprocessing results. Pascal Backend: Manages core computational tasks survival analysis, allowing performance-optimized calculations challenging achieve solely R. Interface Layer: Facilitates communication R Pascal. key directories files package organized follows: vignettes/: Quarto files used documentation website. R/: Contains R functions, user interface code, helper functions. source/: Houses Pascal source code executables. one /lazarus/ used. inst/: Utility files used binary files config examples. man/: Documentation files function, generated via Roxygen2. tests/: Unit integration tests validating package functionality. DESCRIPTION: Provides metadata package (authors, version, description, etc.). NAMESPACE: Specifies functions exported Lifelihood.","code":"lifelihood/ ├── vignettes/ ├── R/ ├── source/ │   └── source_pascal/ │       ├── lazarus/ │       └── delphi/ ├── inst/ │   ├── bin/ │   └── configs/ ├── tests/ ├── man/ ├── DESCRIPTION ├── NAMESPACE └── ..."},{"path":"https://nrode.github.io/Lifelihood/articles/overview.html","id":"directory-structure","dir":"Articles","previous_headings":"How Lifelihood Works","what":"Directory Structure","title":"Overview","text":"key directories files package organized follows: vignettes/: Quarto files used documentation website. R/: Contains R functions, user interface code, helper functions. source/: Houses Pascal source code executables. one /lazarus/ used. inst/: Utility files used binary files config examples. man/: Documentation files function, generated via Roxygen2. tests/: Unit integration tests validating package functionality. DESCRIPTION: Provides metadata package (authors, version, description, etc.). NAMESPACE: Specifies functions exported Lifelihood.","code":"lifelihood/ ├── vignettes/ ├── R/ ├── source/ │   └── source_pascal/ │       ├── lazarus/ │       └── delphi/ ├── inst/ │   ├── bin/ │   └── configs/ ├── tests/ ├── man/ ├── DESCRIPTION ├── NAMESPACE └── ..."},{"path":"https://nrode.github.io/Lifelihood/articles/overview.html","id":"integration-with-pascal-code","dir":"Articles","previous_headings":"","what":"Integration with Pascal Code","title":"Overview","text":"core calculations Lifelihood implemented Pascal optimize computational efficiency. ’s R Pascal components interact. Pascal program requires two different input txt files: configuration data file, example file. parameter boundaries file specifying range parameter, like example file. program outputs results file containing estimates, likelihoods, etc. example output format can found . Since program runs via command line, Lifelihood simplifies process managing steps. Lifelihood accepts large set arguments, generates necessary txt input files, passes program, reads output, formats . Unlike R, Pascal compiled programming language, meaning code must first compiled machine-readable format (binary) execution. Additionally, must compiled separately macOS Windows systems. / directory includes source (.pas) compiled files: lifelihood Unix systems (macOS) lifelihood.exe Windows utility function Lifelihood determines user’s operating system run appropriate executable. Pascal program uses Lazarus, supports cross-platform compilation, simplifying process building code macOS Windows.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/overview.html","id":"pascal-to-r-interface","dir":"Articles","previous_headings":"How Lifelihood Works","what":"Pascal to R Interface","title":"Overview","text":"core calculations Lifelihood implemented Pascal optimize computational efficiency. ’s R Pascal components interact. Pascal program requires two different input txt files: configuration data file, example file. parameter boundaries file specifying range parameter, like example file. program outputs results file containing estimates, likelihoods, etc. example output format can found . Since program runs via command line, Lifelihood simplifies process managing steps. Lifelihood accepts large set arguments, generates necessary txt input files, passes program, reads output, formats .","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/overview.html","id":"pascal-code","dir":"Articles","previous_headings":"How Lifelihood Works","what":"Pascal Code","title":"Overview","text":"Unlike R, Pascal compiled programming language, meaning code must first compiled machine-readable format (binary) execution. Additionally, must compiled separately macOS Windows systems. / directory includes source (.pas) compiled files: lifelihood Unix systems (macOS) lifelihood.exe Windows utility function Lifelihood determines user’s operating system run appropriate executable. Pascal program uses Lazarus, supports cross-platform compilation, simplifying process building code macOS Windows.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/required-data-format.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Required data format","text":"life history data nature heterogeneous observations sample, format data required can somewhat tricky. hood, lifelihood creates text file containing data (parameters), use file (core) source code. Fortunately, lifelihood automatically transform dataframe text file right format. vignette, ’ll look dataframe containing data needs formatted Lifelihood programme work properly.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/required-data-format.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Required data format","text":"Let’s create simple dataset just 7 observations following columns: sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. geno Column name first column add input data file can see, observations made ponts, leading presence NULL values. One row dataset represent life history one observation.","code":"df <- data.frame(   sex = c(0, 0, 0, 0, 0, 0, 0),   sex_start = c(1, 3, 2, 10, 3, 4, 5),   sex_end = c(2, 4, 3, 11, 4, 5, 6),   maturity_start = c(2, 1, 0, 1, 0, 2, 1),   maturity_end = c(4, 2, 1000, 2, 1000, 3, 2),   clutch_start1 = c(3, 2, NA, 2, NA, 3, 2),   clutch_end1 = c(4, 3, NA, 3, NA, 4, 3),   clutch_size1 = c(4, 6, NA, 5, NA, 2, 30),   clutch_start2 = c(5, NA, NA, 5, NA, 4, 3),   clutch_end2 = c(6, NA, NA, 6, NA, 5, 4),   clutch_size2 = c(5, NA, NA, 7, NA, 10, 5),   clutch_start3 = c(7, NA, NA, 6, NA, NA, 5),   clutch_end3 = c(8, NA, NA, 7, NA, NA, 6),   clutch_size3 = c(1, NA, NA, 1, NA, NA, 2),   death_start = c(8, 11, 0, 11, 0, 7, 9),   death_end = c(12, 11, 1, 12, 1, 8, 10),   geno = c(1, 3, 1, 0, 2, 0, 1) )"},{"path":"https://nrode.github.io/Lifelihood/articles/required-data-format.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next step","title":"Required data format","text":"dataframe right format, now create configuration file.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Setting up configuration file","text":"Since lifelihood allows large number combinations parameters estimate given dataset, makes easier separate configuration file specify want fit. hood, program use file estimate specified returns estimations. needed configuration file must YAML format, convenient kind file easy read (humans) parse (program). relies indentation represent structure. Learn YAML.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"Setting up configuration file","text":"3 main sections required YAML configuration file: mortality: parameters related mortality maturity: parameters related maturity reproduction: parameters related reproduction Assuming 2 covariables dataset (named covar1 covar2), estimation parameters, following values possible: not_fitted: estimate parameter. 1: fit intercept. covar1: fit intercept parameter covar1. covar1 + covar2: fit intercept, parameter covar1 parameter covar1. covar1 + covar2 + covar1*covar2: fit intercept, parameter covar1, parameter covar1 interaction covar1 covar2. Note: covar1 covar2 arbitrary names. rule name one columns dataset. expt_death: Expected time death survival_shape: Survival shape parameter ratio_expt_death: Ratio expected time death male vs expected time death female prob_death: Probability death critical time sex_ratio: Sex ratio expt_maturity: Expected time maturity maturity_shape: Maturity shape parameter ratio_expt_maturity: Ratio expected time maturity male expected time maturity female expt_reproduction: Expected time next reproduction reproduction_shape: Reproduction shape parameter n_offspring: Number offspring per reproduction event fitness increase_death_hazard: Increase death hazard following reproduction event tof_reduction_date: Trade-reduction rate increase_tof_n_offspring: Increase trade-proportional number offspring lin_decrease_hazard: Linear decrease hazard rate time since maturity quad_decrease_hazard: Quadratic decrease hazard rate time since maturity lin_change_n_offspring: Linear change number offspring time since maturity quad_change_n_offspring: Quadratic change number offsprings time since maturity tof_n_offspring: Trade-previous reproductive interval current number offspring","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"estimations","dir":"Articles","previous_headings":"Parameters","what":"Estimations","title":"Setting up configuration file","text":"Assuming 2 covariables dataset (named covar1 covar2), estimation parameters, following values possible: not_fitted: estimate parameter. 1: fit intercept. covar1: fit intercept parameter covar1. covar1 + covar2: fit intercept, parameter covar1 parameter covar1. covar1 + covar2 + covar1*covar2: fit intercept, parameter covar1, parameter covar1 interaction covar1 covar2. Note: covar1 covar2 arbitrary names. rule name one columns dataset. expt_death: Expected time death survival_shape: Survival shape parameter ratio_expt_death: Ratio expected time death male vs expected time death female prob_death: Probability death critical time sex_ratio: Sex ratio expt_maturity: Expected time maturity maturity_shape: Maturity shape parameter ratio_expt_maturity: Ratio expected time maturity male expected time maturity female expt_reproduction: Expected time next reproduction reproduction_shape: Reproduction shape parameter n_offspring: Number offspring per reproduction event fitness increase_death_hazard: Increase death hazard following reproduction event tof_reduction_date: Trade-reduction rate increase_tof_n_offspring: Increase trade-proportional number offspring lin_decrease_hazard: Linear decrease hazard rate time since maturity quad_decrease_hazard: Quadratic decrease hazard rate time since maturity lin_change_n_offspring: Linear change number offspring time since maturity quad_change_n_offspring: Quadratic change number offsprings time since maturity tof_n_offspring: Trade-previous reproductive interval current number offspring","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"possible-values","dir":"Articles","previous_headings":"Parameters","what":"Possible values","title":"Setting up configuration file","text":"Assuming 2 covariables dataset (named covar1 covar2), estimation parameters, following values possible: not_fitted: estimate parameter. 1: fit intercept. covar1: fit intercept parameter covar1. covar1 + covar2: fit intercept, parameter covar1 parameter covar1. covar1 + covar2 + covar1*covar2: fit intercept, parameter covar1, parameter covar1 interaction covar1 covar2. Note: covar1 covar2 arbitrary names. rule name one columns dataset.","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"mortality","dir":"Articles","previous_headings":"Parameters","what":"Mortality","title":"Setting up configuration file","text":"expt_death: Expected time death survival_shape: Survival shape parameter ratio_expt_death: Ratio expected time death male vs expected time death female prob_death: Probability death critical time sex_ratio: Sex ratio","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"maturity","dir":"Articles","previous_headings":"Parameters","what":"Maturity","title":"Setting up configuration file","text":"expt_maturity: Expected time maturity maturity_shape: Maturity shape parameter ratio_expt_maturity: Ratio expected time maturity male expected time maturity female","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"reproduction","dir":"Articles","previous_headings":"Parameters","what":"Reproduction","title":"Setting up configuration file","text":"expt_reproduction: Expected time next reproduction reproduction_shape: Reproduction shape parameter n_offspring: Number offspring per reproduction event fitness increase_death_hazard: Increase death hazard following reproduction event tof_reduction_date: Trade-reduction rate increase_tof_n_offspring: Increase trade-proportional number offspring lin_decrease_hazard: Linear decrease hazard rate time since maturity quad_decrease_hazard: Quadratic decrease hazard rate time since maturity lin_change_n_offspring: Linear change number offspring time since maturity quad_change_n_offspring: Quadratic change number offsprings time since maturity tof_n_offspring: Trade-previous reproductive interval current number offspring","code":""},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Setting up configuration file","text":"","code":"--- mortality:   expt_death: geno   survival_shape: geno + type + geno*type   ratio_expt_death: geno   prob_death: geno   sex_ratio: not_fitted maturity:   expt_maturity: geno + type   maturity_shape: geno   ratio_expt_maturity: geno + type reproduction:   expt_reproduction: geno   reproduction_shape: not_fitted   n_offspring: geno   increase_death_hazard: geno + type + geno*type   tof_reduction_date: geno   increase_tof_n_offspring: geno   lin_decrease_hazard: geno + type + geno*type   quad_decrease_hazard: geno   lin_change_n_offspring: geno   quad_change_n_offspring: geno   tof_n_offspring: not_fitted"},{"path":"https://nrode.github.io/Lifelihood/articles/setting-up-the-configuration-file.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next step","title":"Setting up configuration file","text":"next step actually use package.","code":""},{"path":"https://nrode.github.io/Lifelihood/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Rode. Author, maintainer. Thomas Lenormand. Author. Joseph Barbier. Author.","code":""},{"path":"https://nrode.github.io/Lifelihood/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rode N, Lenormand T, Barbier J (2025). lifelihood: Likelihood Life History Individuals. R package version 0.0.0.9, https://nrode.github.io/Lifelihood/.","code":"@Manual{,   title = {lifelihood: Likelihood of Life History of Individuals},   author = {Nicolas Rode and Thomas Lenormand and Joseph Barbier},   year = {2025},   note = {R package version 0.0.0.9},   url = {https://nrode.github.io/Lifelihood/}, }"},{"path":"https://nrode.github.io/Lifelihood/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Likelihood of Life History of Individuals","text":"lifelihood class continuous time multi-event models provide joined likelihood events individual life-history (time maturity, reproductive events, death).","code":""},{"path":"https://nrode.github.io/Lifelihood/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Likelihood of Life History of Individuals","text":"","code":"library(lifelihood)  df <- fakesample head(df) df$type <- as.factor(df$type) df$geno <- as.factor(df$geno)  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = system.file(\"configs/config.yaml\", package = \"lifelihood\"),   seeds = c(1, 2, 3, 4) ) summary(results)"},{"path":"https://nrode.github.io/Lifelihood/reference/AIC.lifelihoodResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike Information Criterion — AIC.lifelihoodResults","title":"Akaike Information Criterion — AIC.lifelihoodResults","text":"S3 method compute AIC (Akaike Information Criterion).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/AIC.lifelihoodResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike Information Criterion — AIC.lifelihoodResults","text":"","code":"# S3 method for class 'lifelihoodResults' AIC(object, ..., k = length(coef(object)))"},{"path":"https://nrode.github.io/Lifelihood/reference/AIC.lifelihoodResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike Information Criterion — AIC.lifelihoodResults","text":"object output lifelihood() ... Ignored k Number estimated parameter modèle. Default length(coef(object)).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/AIC.lifelihoodResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike Information Criterion — AIC.lifelihoodResults","text":"AIC","code":""},{"path":[]},{"path":"https://nrode.github.io/Lifelihood/reference/AIC.lifelihoodResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Akaike Information Criterion — AIC.lifelihoodResults","text":"","code":"library(lifelihood) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.2     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors  df <- lifelihood::fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 AIC(results) #> [1] 1291.205"},{"path":"https://nrode.github.io/Lifelihood/reference/AICc.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike Information Criterion for small sample size — AICc","title":"Akaike Information Criterion for small sample size — AICc","text":"S3 method compute AICc (Akaike Information Criterion corrected small sample size, see Hurvich Tsai 1989).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/AICc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike Information Criterion for small sample size — AICc","text":"","code":"AICc(object, ..., k = length(coef(object)))"},{"path":"https://nrode.github.io/Lifelihood/reference/AICc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike Information Criterion for small sample size — AICc","text":"object output lifelihood() ... Ignored k Number estimated parameter modèle. Default length(coef(object)).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/AICc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike Information Criterion for small sample size — AICc","text":"AICc","code":""},{"path":[]},{"path":"https://nrode.github.io/Lifelihood/reference/AICc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Akaike Information Criterion for small sample size — AICc","text":"","code":"library(lifelihood) library(tidyverse)  df <- lifelihood::fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 AICc(results) #> [1] 1155.205"},{"path":"https://nrode.github.io/Lifelihood/reference/BIC.lifelihoodResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Information Criterion — BIC.lifelihoodResults","title":"Bayesian Information Criterion — BIC.lifelihoodResults","text":"S3 method compute BIC (Bayesian Information Criterion).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/BIC.lifelihoodResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Information Criterion — BIC.lifelihoodResults","text":"","code":"# S3 method for class 'lifelihoodResults' BIC(object, ...)"},{"path":"https://nrode.github.io/Lifelihood/reference/BIC.lifelihoodResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Information Criterion — BIC.lifelihoodResults","text":"object output lifelihood() ... Ignored","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/BIC.lifelihoodResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Information Criterion — BIC.lifelihoodResults","text":"BIC","code":""},{"path":[]},{"path":"https://nrode.github.io/Lifelihood/reference/BIC.lifelihoodResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Information Criterion — BIC.lifelihoodResults","text":"","code":"library(lifelihood) library(tidyverse)  df <- lifelihood::fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 BIC(results) #> [1] 1320.017"},{"path":"https://nrode.github.io/Lifelihood/reference/IntX1toX2MortWei.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of dying between t and t+dt afer living until t. — IntX1toX2MortWei","title":"Probability of dying between t and t+dt afer living until t. — IntX1toX2MortWei","text":"Probability dying t t+dt afer living t.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/IntX1toX2MortWei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of dying between t and t+dt afer living until t. — IntX1toX2MortWei","text":"","code":"IntX1toX2MortWei(t, dt, param1, param2, law)"},{"path":"https://nrode.github.io/Lifelihood/reference/IntX1toX2MortWei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of dying between t and t+dt afer living until t. — IntX1toX2MortWei","text":"t Numeric. time event ExpLong Numeric. expected longevity Shape Numeric. shape parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/IntX1toX2MortWei.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of dying between t and t+dt afer living until t. — IntX1toX2MortWei","text":"survival probability (numeric)","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/R_to_lifelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R formula to lifelihood formula — R_to_lifelihood","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"Transforms character string describing covariates included format compiled program can understand. example, \"geno + type\" become 1 2 \"geno\" first element covariables \"type\" second. function used create model part input text file.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"","code":"R_to_lifelihood(R_format, covariates, covar_types)"},{"path":"https://nrode.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"R_format String representing covariates adjusted. example, \"geno + type\" use covariates geno type. covariates Vector containing names covariates.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"formatted format lifelihood understand parameter fit.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"","code":"R_to_lifelihood(\"geno + type\", c(\"geno\", \"type\")) #> Error in R_to_lifelihood(\"geno + type\", c(\"geno\", \"type\")): argument \"covar_types\" is missing, with no default R_to_lifelihood(\"geno + type + geno*type\", c(\"geno\", \"type\")) #> Error in R_to_lifelihood(\"geno + type + geno*type\", c(\"geno\", \"type\")): argument \"covar_types\" is missing, with no default"},{"path":"https://nrode.github.io/Lifelihood/reference/SurvExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential survival function — SurvExp","title":"Exponential survival function — SurvExp","text":"Exponential survival function","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential survival function — SurvExp","text":"","code":"SurvExp(t, ExpLong)"},{"path":"https://nrode.github.io/Lifelihood/reference/SurvExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exponential survival function — SurvExp","text":"t Numeric. time event ExpLong Numeric. expected longevity Shape Numeric. shape parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exponential survival function — SurvExp","text":"survival probability (numeric)","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvGam.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma survival function — SurvGam","title":"Gamma survival function — SurvGam","text":"Gamma survival function","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvGam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma survival function — SurvGam","text":"","code":"SurvGam(t, ExpLong, scale)"},{"path":"https://nrode.github.io/Lifelihood/reference/SurvGam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma survival function — SurvGam","text":"t Numeric. time event ExpLong Numeric. expected longevity Shape Numeric. shape parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvGam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma survival function — SurvGam","text":"survival probability (numeric)","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvLgn.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-normal survival function — SurvLgn","title":"Log-normal survival function — SurvLgn","text":"Log-normal survival function","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvLgn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-normal survival function — SurvLgn","text":"","code":"SurvLgn(t, ExpLong, scale)"},{"path":"https://nrode.github.io/Lifelihood/reference/SurvLgn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-normal survival function — SurvLgn","text":"t Numeric. time event ExpLong Numeric. expected longevity Shape Numeric. shape parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvLgn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-normal survival function — SurvLgn","text":"survival probability (numeric)","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvWei.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull survival function — SurvWei","title":"Weibull survival function — SurvWei","text":"Weibull survival function","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvWei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull survival function — SurvWei","text":"","code":"SurvWei(t, ExpLong, Shape)"},{"path":"https://nrode.github.io/Lifelihood/reference/SurvWei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull survival function — SurvWei","text":"t Numeric. time event ExpLong Numeric. expected longevity Shape Numeric. shape parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/SurvWei.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull survival function — SurvWei","text":"survival probability (numeric)","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/check_valid_estimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if estimation are too close from boundaries. — check_valid_estimation","title":"Check if estimation are too close from boundaries. — check_valid_estimation","text":"Since parameter boundaries default_bounds_df() (customized user), function checks estimation parameter \"close\" (0.5% tolerance) one boundaries (either min max). , raises warning tries explicit. function can ignored thanks raise_estimation_warning argument (boolean) lifelihood().","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/check_valid_estimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if estimation are too close from boundaries. — check_valid_estimation","text":"","code":"check_valid_estimation(lifelihoodResults)"},{"path":"https://nrode.github.io/Lifelihood/reference/check_valid_estimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if estimation are too close from boundaries. — check_valid_estimation","text":"lifelihoodResults Output object lifelihood() function.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/check_valid_lifelihoodResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that an object is of class lifelihoodResults — check_valid_lifelihoodResults","title":"Check that an object is of class lifelihoodResults — check_valid_lifelihoodResults","text":"Internally, lifelihood check multiple times passed object expected one. basically raises explicit error object class lifelihoodResults.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/check_valid_lifelihoodResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that an object is of class lifelihoodResults — check_valid_lifelihoodResults","text":"","code":"check_valid_lifelihoodResults(object)"},{"path":"https://nrode.github.io/Lifelihood/reference/check_valid_lifelihoodResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that an object is of class lifelihoodResults — check_valid_lifelihoodResults","text":"object object test.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/check_valid_lifelihoodResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that an object is of class lifelihoodResults — check_valid_lifelihoodResults","text":"","code":"if (FALSE) { # \\dontrun{ # raise an error obj <- c(1,2,3) check_valid_lifelihoodResults(obj)  # works (does nothing) class(obj) = \"lifelihoodResults\" check_valid_lifelihoodResults(obj) } # }"},{"path":"https://nrode.github.io/Lifelihood/reference/coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient estimates — coef","title":"Coefficient estimates — coef","text":"coef() retrieve coefficients output lifelihood() coeff() retrieve coefficients one parameter output lifelihood()","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient estimates — coef","text":"","code":"# S3 method for class 'lifelihoodResults' coef(object, ...)  coeff(object, parameter_name)"},{"path":"https://nrode.github.io/Lifelihood/reference/coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient estimates — coef","text":"object output lifelihood() ... Ignored parameter_name Name parameters extract estimate extract parameter estimates). parameters#' can found .","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient estimates — coef","text":"nested list coefficient estimates list coefficient estimates","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient estimates — coef","text":"","code":"library(lifelihood) library(tidyverse)  df <- lifelihood::fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 coef(results) #>                          int_expt_death                   eff_expt_death_geno_1  #>                             -11.9449429                             -12.2167414  #>                   eff_expt_death_type_1                   eff_expt_death_type_2  #>                             -17.4578138                              -9.5788906  #>                      int_survival_shape               eff_survival_shape_geno_1  #>                             -12.4849939                             -19.7491969  #>               eff_survival_shape_type_1               eff_survival_shape_type_2  #>                             -17.3748815                               2.6682119  #>        eff_survival_shape_type_1:geno_1        eff_survival_shape_type_2:geno_1  #>                              -6.5460851                             -14.5649205  #>                    int_ratio_expt_death             eff_ratio_expt_death_geno_1  #>                              -7.1006194                              10.4608933  #>                          int_prob_death                   eff_prob_death_geno_1  #>                             -10.4279891                             -11.3766401  #>                       int_expt_maturity                eff_expt_maturity_geno_1  #>                               0.4246114                              -0.5987078  #>                eff_expt_maturity_type_1                eff_expt_maturity_type_2  #>                              10.2893645                              -1.0230025  #>                      int_maturity_shape               eff_maturity_shape_geno_1  #>                             -19.5699810                              -7.1923330  #>                 int_ratio_expt_maturity          eff_ratio_expt_maturity_geno_1  #>                              14.5293003                               8.0512975  #>          eff_ratio_expt_maturity_type_1          eff_ratio_expt_maturity_type_2  #>                              -2.0374967                              -7.0457527  #>                   int_expt_reproduction            eff_expt_reproduction_geno_1  #>                              -1.5884860                              11.6826788  #>                               int_pontn                        eff_pontn_geno_1  #>                              -8.8326239                             -19.9999601  #>               int_increase_death_hazard        eff_increase_death_hazard_geno_1  #>                               9.3567346                             -17.1122105  #>        eff_increase_death_hazard_type_1        eff_increase_death_hazard_type_2  #>                               4.6742563                              10.6544722  #> eff_increase_death_hazard_type_1:geno_1 eff_increase_death_hazard_type_2:geno_1  #>                              17.7414034                               3.1766257  #>                  int_tof_reduction_date           eff_tof_reduction_date_geno_1  #>                              -5.0608854                              17.0587281  #>            int_increase_tof_n_offspring     eff_increase_tof_n_offspring_geno_1  #>                              -7.7631429                               1.0542894  #>                 int_lin_decrease_hazard          eff_lin_decrease_hazard_geno_1  #>                               3.7536999                               6.3045810  #>          eff_lin_decrease_hazard_type_1          eff_lin_decrease_hazard_type_2  #>                              -9.9093761                              10.2707608  #>   eff_lin_decrease_hazard_type_1:geno_1   eff_lin_decrease_hazard_type_2:geno_1  #>                              10.5169971                             -16.5269890  #>                     int_quad_senescence              eff_quad_senescence_geno_1  #>                              16.0191401                             -17.9411463  #>                int_quad_decrease_hazard         eff_quad_decrease_hazard_geno_1  #>                             -13.4062494                              16.4551575  #>             int_quad_change_n_offspring      eff_quad_change_n_offspring_geno_1  #>                               2.8626095                              -1.0616118  #>                     int_tof_n_offspring  #>                              -5.2294123  library(lifelihood) library(tidyverse)  df <- lifelihood::fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0  coeff(results, \"expt_death\") #>        int_expt_death eff_expt_death_geno_1 eff_expt_death_type_1  #>            -11.944943            -12.216741            -17.457814  #> eff_expt_death_type_2  #>             -9.578891"},{"path":"https://nrode.github.io/Lifelihood/reference/compute_mortality_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute empirical mortality rate — compute_mortality_rate","title":"Compute empirical mortality rate — compute_mortality_rate","text":"Calculate empirical mortality rate given interval.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/compute_mortality_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute empirical mortality rate — compute_mortality_rate","text":"","code":"compute_mortality_rate(   lifelihoodData,   interval_width,   max_time = NULL,   min_sample_size = 1,   groupby = NULL )"},{"path":"https://nrode.github.io/Lifelihood/reference/compute_mortality_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute empirical mortality rate — compute_mortality_rate","text":"lifelihoodData lifelihoodData object created lifelihoodData(). interval_width interval width used calculate mortality rate. instance, time unit deaths original dataset days interval_width set 10, mortality rate calculated every 10 days group. max_time maximum time calculating mortality rate. set NULL, time last observed death used. min_sample_size minimum number individuals alive beggining time interval computing observed mortality rate groupby covariate(s) mortality rate computed (default NULL). NULL, calculates single overall mortality rate. \"\", calculates mortality rate combination covariates listed thelifelihoodData object provided. Otherwise must character (\"covariate1\") character vector (c(\"covariate1\", \"covariate2\")).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/compute_mortality_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute empirical mortality rate — compute_mortality_rate","text":"dataframe 3 columns: Interval (time interval, based interval_width value), Group (identifier given subgroup, \"Overall\" groupby = NULL), MortalityRate (mortality rate time).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/compute_mortality_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute empirical mortality rate — compute_mortality_rate","text":"","code":"library(lifelihood) library(tidyverse)  df <- fakesample |>   mutate(     geno = as.factor(geno),     type = as.factor(type)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  mort_df <- compute_mortality_rate(dataLFH, interval_width = 2) head(mort_df) #>   Interval_start Interval_end Mean_Interval MortalityRate #> 1              0            2             1     0.2307692 #> 2              2            4             3     0.0000000 #> 3              4            6             5     0.1000000 #> 4              6            8             7     0.0000000 #> 5              8           10             9     0.0000000 #> 6             10           12            11     0.0000000  mort_df <- compute_mortality_rate(   dataLFH,   interval_width = 2,   groupby = NULL,   max_time = 170 ) head(mort_df) #>   Interval_start Interval_end Mean_Interval MortalityRate #> 1              0            2             1     0.2307692 #> 2              2            4             3     0.0000000 #> 3              4            6             5     0.1000000 #> 4              6            8             7     0.0000000 #> 5              8           10             9     0.0000000 #> 6             10           12            11     0.0000000"},{"path":"https://nrode.github.io/Lifelihood/reference/datapierrick.html","id":null,"dir":"Reference","previous_headings":"","what":"Pierrick data — datapierrick","title":"Pierrick data — datapierrick","text":"Pierrick data","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/datapierrick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pierrick data — datapierrick","text":"","code":"datapierrick"},{"path":"https://nrode.github.io/Lifelihood/reference/datapierrick.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pierrick data — datapierrick","text":"object class data.frame 550 rows 95 columns.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/default_bounds_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataframe with default parameter boundaries — default_bounds_df","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"created lifelihoodData object lifelihoodData(), can call default_bounds_df() function generate (load) dataframe default parameter bounds. useful want customise bounds pass dataframe lifelihood() function via param_bounds_df argument (, automatically generate keep default values).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/default_bounds_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"","code":"default_bounds_df(lifelihoodData)"},{"path":"https://nrode.github.io/Lifelihood/reference/default_bounds_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"lifelihoodData lifelihoodData object created lifelihoodData().","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/default_bounds_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"dataframe default parameter boundaries.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/default_bounds_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"","code":"library(lifelihood) library(tidyverse)  df <- fakesample |>   mutate(     geno = as.factor(geno),     type = as.factor(type)   ) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 death_start death_end #> 1           NA            NA          NA           NA         0.1         1 #> 2            4             2           4            5         9.0        10 #> 3            5            NA          NA           NA         5.0         6 #> 4            5            NA          NA           NA         5.0         6 #> 5            5            NA          NA           NA         5.0         6 #> 6           NA            NA          NA           NA         0.1         1  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_end\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  bounds_df <- default_bounds_df(dataLFH) head(bounds_df) #>              param   min     max #> 1       expt_death 0.001      40 #> 2   survival_shape  0.05     500 #> 3 ratio_expt_death  0.01     100 #> 4       prob_death 1e-05 0.99999 #> 5        sex_ratio 1e-05 0.99999 #> 6    expt_maturity 0.001       8  # for example, we want to change this value bounds_df[bounds_df$name == \"increase_death_hazard\", \"max\"] <- 80  # then we pass it to lifelihood() results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   param_bounds_df = bounds_df,   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0"},{"path":"https://nrode.github.io/Lifelihood/reference/delink.html","id":null,"dir":"Reference","previous_headings":"","what":"Delink function — delink","title":"Delink function — delink","text":"Delink function transform parameters original scale lifelihood scale.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/delink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delink function — delink","text":"","code":"delink(obs, min, max)"},{"path":"https://nrode.github.io/Lifelihood/reference/delink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delink function — delink","text":"obs observed value parameter min minimum value parameter max maximum value parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/delink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delink function — delink","text":"Numeric. transformed parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/derivLink.html","id":null,"dir":"Reference","previous_headings":"","what":"derivLink function — derivLink","title":"derivLink function — derivLink","text":"Derivative link function used transform parameters lifelihood scale original scale.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/derivLink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"derivLink function — derivLink","text":"","code":"derivLink(estimate, min, max)"},{"path":"https://nrode.github.io/Lifelihood/reference/derivLink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"derivLink function — derivLink","text":"estimate estimate parameter min minimum value parameter max maximum value parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/derivLink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"derivLink function — derivLink","text":"Numeric. Derivative link function parameter estimate","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/detect_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the operating system of the user — detect_os","title":"Find the operating system of the user — detect_os","text":"detect_os() finds operating system name","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/detect_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the operating system of the user — detect_os","text":"","code":"detect_os()"},{"path":"https://nrode.github.io/Lifelihood/reference/detect_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the operating system of the user — detect_os","text":"String name operating system, either \"Windows\" \"Unix-like\"","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/detect_os.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the operating system of the user — detect_os","text":"","code":"detect_os() #>  sysname  #> \"Darwin\""},{"path":"https://nrode.github.io/Lifelihood/reference/execute_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Execution of the compiled files — execute_bin","title":"Execution of the compiled files — execute_bin","text":"Run lifelihood program console mode.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/execute_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execution of the compiled files — execute_bin","text":"","code":"execute_bin(   path_to_Lifelihood,   path_input_data,   path_param_bounds,   group_by_group,   MCMC,   interval,   SEcal,   saveprobevent,   fitness,   r,   seed1,   seed2,   seed3,   seed4,   ntr,   nst,   To,   Tf,   climbrate,   precision )"},{"path":"https://nrode.github.io/Lifelihood/reference/execute_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execution of the compiled files — execute_bin","text":"path_to_Lifelihood character string specifying file path compile Lifelihood program (default NULL) path_input_data Path input text file model data fitted. path_param_bounds Path parameter boundaries text file min max boudaries parameter. group_by_group Boolean option fit full factorail model interactions factors MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal TRUE, Lifelihood computes standard error parameter using Hessian matrix (output value -1 standard error computed due singularity Hessian matrix) saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seed1 First seed number used reproduce results (seed = results). seed2 Second seed number used reproduce results (seed = results). seed3 Third seed number used reproduce results (seed = results). seed4 4th seed number used reproduce results (seed = results). ntr Number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/factor_to_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a factor variable to integers — factor_to_num","title":"Convert a factor variable to integers — factor_to_num","text":"Function necessary Pascal program expects integers factor levels.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/factor_to_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a factor variable to integers — factor_to_num","text":"","code":"factor_to_num(x)"},{"path":"https://nrode.github.io/Lifelihood/reference/factor_to_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a factor variable to integers — factor_to_num","text":"x column name","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/factor_to_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a factor variable to integers — factor_to_num","text":"integer","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/fakesample.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake sample — fakesample","title":"Fake sample — fakesample","text":"Fake sample","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/fakesample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake sample — fakesample","text":"","code":"fakesample"},{"path":"https://nrode.github.io/Lifelihood/reference/fakesample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake sample — fakesample","text":"object class data.frame 13 rows 15 columns.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/find_event_type.html","id":null,"dir":"Reference","previous_headings":"","what":"find event type — find_event_type","title":"find event type — find_event_type","text":"find event type","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/find_event_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find event type — find_event_type","text":"","code":"find_event_type(parameter_name)"},{"path":"https://nrode.github.io/Lifelihood/reference/find_event_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find event type — find_event_type","text":"parameter_name Name parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/find_event_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find event type — find_event_type","text":"Event type: either \"reproduction\", \"maturity\" \"mortality\"","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/find_parameter_kind.html","id":null,"dir":"Reference","previous_headings":"","what":"Deducting the type of parameter from an estimate — find_parameter_kind","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"function takes estimate name input returns whether intercept coefficient/slope. element found possible match, returns error. function used add information type estimate output lifelihood() function.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/find_parameter_kind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"","code":"find_parameter_kind(name)"},{"path":"https://nrode.github.io/Lifelihood/reference/find_parameter_kind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"name character string representing parameter name.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/find_parameter_kind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"kind parameter: either intercept coefficient/slope","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and parse the configuration file (YAML). — format_config","title":"Read and parse the configuration file (YAML). — format_config","text":"Safely access configuration file use lifelihood. function used lifelihood() creating input text file.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and parse the configuration file (YAML). — format_config","text":"","code":"format_config(path_config, covariates, covar_types)"},{"path":"https://nrode.github.io/Lifelihood/reference/format_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and parse the configuration file (YAML). — format_config","text":"covariates Vector containing names covariates.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and parse the configuration file (YAML). — format_config","text":"character vector used model tag input text file.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_dataframe_to_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the input data file from a dataframe — format_dataframe_to_txt","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"Takes dataframe (df argument lifelihoodData() function) apply row format_row() function create input data file.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_dataframe_to_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"","code":"format_dataframe_to_txt(   df,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   matclutch,   matclutch_size,   clutchs,   death_start,   death_end,   covariates,   model_specs,   path_config,   temp_dir )"},{"path":"https://nrode.github.io/Lifelihood/reference/format_dataframe_to_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"df Dataframe data life history. one row per life history / observation. sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. matclutch Whether maturity event (designated maturity_start maturity_end) clutch event . TRUE, must specify matclutch_size argument. Default FALSE. matclutch_size Column name containing size clutch maturity event. used (required) matclutch TRUE. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. covariates Vector containing names covariates. model_specs Vector characters name statistical law use. Must length 3 element must one \"wei\" (Weibull law), \"exp\" (Exponential law), \"gam\" (Gamma law) \"lgn\" (Log-normal law). first one used maturity, second one used clutchs third one death. path_config character string specifying file path YAML configuration file. temp_dir Name temporary directory temporary files","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a dataframe row for the input data file — format_row","title":"Format a dataframe row for the input data file — format_row","text":"Takes row dataframe input data (sex, maturity, clutch date death) interval format transform large string (required format data input file).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a dataframe row for the input data file — format_row","text":"","code":"format_row(   row,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   clutchs,   death_start,   death_end,   covariates )"},{"path":"https://nrode.github.io/Lifelihood/reference/format_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a dataframe row for the input data file — format_row","text":"row row dataframe object provided user (df argument lifelihoodData() function). sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. covariates Vector containing names covariates.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/format_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a dataframe row for the input data file — format_row","text":"string well formated row.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/get_config_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the path to a built-in configuration file. — get_config_path","title":"Get the path to a built-in configuration file. — get_config_path","text":"lifelihood embeds configuration files, function simple tool access one . takes name one available configuration returns path . info configuration files, see vignette(\"setting---configuration-file\", package = \"lifelihood\")","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/get_config_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the path to a built-in configuration file. — get_config_path","text":"","code":"get_config_path(config_name = c(\"config\", \"config2\", \"config_pierrick\"))"},{"path":"https://nrode.github.io/Lifelihood/reference/get_config_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the path to a built-in configuration file. — get_config_path","text":"config_name Configuration name. Currently available options: config config2 config_pierrick default, use \"config\".","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/get_config_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the path to a built-in configuration file. — get_config_path","text":"Absolute path configuration file","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/get_config_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the path to a built-in configuration file. — get_config_path","text":"","code":"get_config_path(\"config\") #> [1] \"/private/var/folders/y6/nj790rtn62lfktb1sh__79hc0000gn/T/RtmpJCLWcT/temp_libpath1c084776ce36/lifelihood/configs/config.yaml\" get_config_path(\"config2\") #> [1] \"/private/var/folders/y6/nj790rtn62lfktb1sh__79hc0000gn/T/RtmpJCLWcT/temp_libpath1c084776ce36/lifelihood/configs/config2.yaml\""},{"path":"https://nrode.github.io/Lifelihood/reference/has_valid_factor_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for valid factor levels — has_valid_factor_levels","title":"Check for valid factor levels — has_valid_factor_levels","text":"purpose function ensure user makes prediction predict(), newdata contains factor levels covariates training data. levels missing mismatched, raises error displays warning.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/has_valid_factor_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for valid factor levels — has_valid_factor_levels","text":"","code":"has_valid_factor_levels(original_df, newdata, covariates)"},{"path":"https://nrode.github.io/Lifelihood/reference/has_valid_factor_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for valid factor levels — has_valid_factor_levels","text":"original_df Training set passed lifelihoodData() (df arg). newdata New data passed predict() (newdata arg). covariates Covariates passed lifelihoodData() (covariates arg).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/has_valid_factor_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for valid factor levels — has_valid_factor_levels","text":"TRUE factor levels covariate newdata passed predict() present training data, FALSE otherwise.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual life history modelling — lifelihood","title":"Individual life history modelling — lifelihood","text":"Computes joined likelihood events individual life-history (time maturity, reproductive events, death) estimates parameters model using maximum likelihood.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual life history modelling — lifelihood","text":"","code":"lifelihood(   lifelihoodData,   path_config,   path_to_Lifelihood = NULL,   param_bounds_df = NULL,   group_by_group = FALSE,   MCMC = 0,   interval = 25,   SEcal = FALSE,   saveprobevent = 0,   fitness = 0,   r = 0,   seeds = NULL,   ntr = 2,   nst = 2,   To = 50,   Tf = 1,   climbrate = 1,   precision = 0.001,   raise_estimation_warning = TRUE,   delete_temp_files = TRUE )"},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual life history modelling — lifelihood","text":"lifelihoodData lifelihoodData object created lifelihoodData(). path_config character string specifying file path YAML configuration file. path_to_Lifelihood character string specifying file path compile Lifelihood program (default NULL) param_bounds_df Dataframe parameter ranges/boundaries/boundaries group_by_group Boolean option fit full factorail model interactions factors MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal TRUE, Lifelihood computes standard error parameter using Hessian matrix (output value -1 standard error computed due singularity Hessian matrix) saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seeds Numbers used reproduce results (seeds = results). must vector length 4. ntr Number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning raise_estimation_warning Whether raise warning estimate parameter close minimum maximum bound. Default TRUE. delete_temp_files Indicates whether temporary files deleted. TRUE default recommended.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Individual life history modelling — lifelihood","text":"lifelihoodResults object","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Individual life history modelling — lifelihood","text":"","code":"library(lifelihood) library(tidyverse)  df <- fakesample |>   mutate(     geno = as.factor(geno),     type = as.factor(type)   ) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 death_start death_end #> 1           NA            NA          NA           NA         0.1         1 #> 2            4             2           4            5         9.0        10 #> 3            5            NA          NA           NA         5.0         6 #> 4            5            NA          NA           NA         5.0         6 #> 5            5            NA          NA           NA         5.0         6 #> 6           NA            NA          NA           NA         0.1         1  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 summary(results) #> LIFELIHOOD RESULTS #>  #> Likelihood: #> [1] -594.6025 #>  #> Effects: #>                                       name  estimation stderror #> 1                           int_expt_death -11.9449429        0 #> 2                    eff_expt_death_geno_1 -12.2167414        0 #> 3                    eff_expt_death_type_1 -17.4578138        0 #> 4                    eff_expt_death_type_2  -9.5788906        0 #> 5                       int_survival_shape -12.4849939        0 #> 6                eff_survival_shape_geno_1 -19.7491969        0 #> 7                eff_survival_shape_type_1 -17.3748815        0 #> 8                eff_survival_shape_type_2   2.6682119        0 #> 9         eff_survival_shape_type_1:geno_1  -6.5460851        0 #> 10        eff_survival_shape_type_2:geno_1 -14.5649205        0 #> 11                    int_ratio_expt_death  -7.1006194        0 #> 12             eff_ratio_expt_death_geno_1  10.4608933        0 #> 13                          int_prob_death -10.4279891        0 #> 14                   eff_prob_death_geno_1 -11.3766401        0 #> 15                       int_expt_maturity   0.4246114        0 #> 16                eff_expt_maturity_geno_1  -0.5987078        0 #> 17                eff_expt_maturity_type_1  10.2893645        0 #> 18                eff_expt_maturity_type_2  -1.0230025        0 #> 19                      int_maturity_shape -19.5699810        0 #> 20               eff_maturity_shape_geno_1  -7.1923330        0 #> 21                 int_ratio_expt_maturity  14.5293003        0 #> 22          eff_ratio_expt_maturity_geno_1   8.0512975        0 #> 23          eff_ratio_expt_maturity_type_1  -2.0374967        0 #> 24          eff_ratio_expt_maturity_type_2  -7.0457527        0 #> 25                   int_expt_reproduction  -1.5884860        0 #> 26            eff_expt_reproduction_geno_1  11.6826788        0 #> 27                               int_pontn  -8.8326239        0 #> 28                        eff_pontn_geno_1 -19.9999601        0 #> 29               int_increase_death_hazard   9.3567346        0 #> 30        eff_increase_death_hazard_geno_1 -17.1122105        0 #> 31        eff_increase_death_hazard_type_1   4.6742563        0 #> 32        eff_increase_death_hazard_type_2  10.6544722        0 #> 33 eff_increase_death_hazard_type_1:geno_1  17.7414034        0 #> 34 eff_increase_death_hazard_type_2:geno_1   3.1766257        0 #> 35                  int_tof_reduction_date  -5.0608854        0 #> 36           eff_tof_reduction_date_geno_1  17.0587281        0 #> 37            int_increase_tof_n_offspring  -7.7631429        0 #> 38     eff_increase_tof_n_offspring_geno_1   1.0542894        0 #> 39                 int_lin_decrease_hazard   3.7536999        0 #> 40          eff_lin_decrease_hazard_geno_1   6.3045810        0 #> 41          eff_lin_decrease_hazard_type_1  -9.9093761        0 #> 42          eff_lin_decrease_hazard_type_2  10.2707608        0 #> 43   eff_lin_decrease_hazard_type_1:geno_1  10.5169971        0 #> 44   eff_lin_decrease_hazard_type_2:geno_1 -16.5269890        0 #> 45                     int_quad_senescence  16.0191401        0 #> 46              eff_quad_senescence_geno_1 -17.9411463        0 #> 47                int_quad_decrease_hazard -13.4062494        0 #> 48         eff_quad_decrease_hazard_geno_1  16.4551575        0 #> 49             int_quad_change_n_offspring   2.8626095        0 #> 50      eff_quad_change_n_offspring_geno_1  -1.0616118        0 #> 51                     int_tof_n_offspring  -5.2294123        0 #>                   parameter        kind        event #> 1                expt_death   intercept    mortality #> 2                expt_death coefficient    mortality #> 3                expt_death coefficient    mortality #> 4                expt_death coefficient    mortality #> 5            survival_shape   intercept    mortality #> 6            survival_shape coefficient    mortality #> 7            survival_shape coefficient    mortality #> 8            survival_shape coefficient    mortality #> 9            survival_shape coefficient    mortality #> 10           survival_shape coefficient    mortality #> 11         ratio_expt_death   intercept    mortality #> 12         ratio_expt_death coefficient    mortality #> 13               prob_death   intercept    mortality #> 14               prob_death coefficient    mortality #> 15            expt_maturity   intercept     maturity #> 16            expt_maturity coefficient     maturity #> 17            expt_maturity coefficient     maturity #> 18            expt_maturity coefficient     maturity #> 19           maturity_shape   intercept     maturity #> 20           maturity_shape coefficient     maturity #> 21      ratio_expt_maturity   intercept     maturity #> 22      ratio_expt_maturity coefficient     maturity #> 23      ratio_expt_maturity coefficient     maturity #> 24      ratio_expt_maturity coefficient     maturity #> 25        expt_reproduction   intercept reproduction #> 26        expt_reproduction coefficient reproduction #> 27                    pontn   intercept reproduction #> 28                    pontn coefficient reproduction #> 29    increase_death_hazard   intercept reproduction #> 30    increase_death_hazard coefficient reproduction #> 31    increase_death_hazard coefficient reproduction #> 32    increase_death_hazard coefficient reproduction #> 33    increase_death_hazard coefficient reproduction #> 34    increase_death_hazard coefficient reproduction #> 35       tof_reduction_date   intercept reproduction #> 36       tof_reduction_date coefficient reproduction #> 37 increase_tof_n_offspring   intercept reproduction #> 38 increase_tof_n_offspring coefficient reproduction #> 39      lin_decrease_hazard   intercept reproduction #> 40      lin_decrease_hazard coefficient reproduction #> 41      lin_decrease_hazard coefficient reproduction #> 42      lin_decrease_hazard coefficient reproduction #> 43      lin_decrease_hazard coefficient reproduction #> 44      lin_decrease_hazard coefficient reproduction #> 45          quad_senescence   intercept reproduction #> 46          quad_senescence coefficient reproduction #> 47     quad_decrease_hazard   intercept reproduction #> 48     quad_decrease_hazard coefficient reproduction #> 49  quad_change_n_offspring   intercept reproduction #> 50  quad_change_n_offspring coefficient reproduction #> 51          tof_n_offspring   intercept reproduction #>"},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihoodData.html","id":null,"dir":"Reference","previous_headings":"","what":"Data object for lifelihood — lifelihoodData","title":"Data object for lifelihood — lifelihoodData","text":"Creates lifelihoodData object, list containing information needed run lifelihood program given dataset individual life history. function mainly used pass lifelihood() customizing parameter boundaries default_bounds_df().","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihoodData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data object for lifelihood — lifelihoodData","text":"","code":"lifelihoodData(   df,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   clutchs,   death_start,   death_end,   model_specs,   covariates,   matclutch = FALSE,   matclutch_size = NULL,   right_censoring_date = 1000,   critical_age = 20,   ratiomax = 10 )"},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihoodData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data object for lifelihood — lifelihoodData","text":"df Dataframe data life history. one row per life history / observation. sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. model_specs Vector characters name statistical law use. Must length 3 element must one \"wei\" (Weibull law), \"exp\" (Exponential law), \"gam\" (Gamma law) \"lgn\" (Log-normal law). first one used maturity, second one used clutchs third one death. covariates Vector containing names covariates. matclutch Whether maturity event (designated maturity_start maturity_end) clutch event . TRUE, must specify matclutch_size argument. Default FALSE. matclutch_size Column name containing size clutch maturity event. used (required) matclutch TRUE. right_censoring_date (CURRENTLY IGNORED) Time (integer) point subject’s data censored. means subjects experience event interest (e.g., death, failure) date, data considered censored. practice, choose value much larger maximum longevity seen data. critical_age (CURRENTLY IGNORED) Critical age (integer) life histories followed individually. ratiomax (CURRENTLY IGNORED) Maximum ratio (integer) number offspring last first reproduction events. greater ratiomax.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihoodData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data object for lifelihood — lifelihoodData","text":"lifelihoodData object","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/lifelihoodData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data object for lifelihood — lifelihoodData","text":"","code":"library(lifelihood) library(tidyverse)  df <- fakesample |>   mutate(     geno = as.factor(geno),     type = as.factor(type)   ) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 death_start death_end #> 1           NA            NA          NA           NA         0.1         1 #> 2            4             2           4            5         9.0        10 #> 3            5            NA          NA           NA         5.0         6 #> 4            5            NA          NA           NA         5.0         6 #> 5            5            NA          NA           NA         5.0         6 #> 6           NA            NA          NA           NA         0.1         1  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  summary(data) #> Error in object[[i]]: object of type 'closure' is not subsettable"},{"path":"https://nrode.github.io/Lifelihood/reference/link.html","id":null,"dir":"Reference","previous_headings":"","what":"Link function — link","title":"Link function — link","text":"Link function transform parameters lifelihood scale original scale","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link function — link","text":"","code":"link(estimate, min, max)"},{"path":"https://nrode.github.io/Lifelihood/reference/link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link function — link","text":"estimate estimate parameter min minimum value parameter max maximum value parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link function — link","text":"transformed parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/logLik.lifelihoodResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood — logLik.lifelihoodResults","title":"Likelihood — logLik.lifelihoodResults","text":"S3 method retrieve likelihood output lifelihood()","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/logLik.lifelihoodResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood — logLik.lifelihoodResults","text":"","code":"# S3 method for class 'lifelihoodResults' logLik(object, ...)"},{"path":"https://nrode.github.io/Lifelihood/reference/logLik.lifelihoodResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood — logLik.lifelihoodResults","text":"object output lifelihood() ... Ignored","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/logLik.lifelihoodResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood — logLik.lifelihoodResults","text":"number value maximum likelihood found.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/logLik.lifelihoodResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood — logLik.lifelihoodResults","text":"","code":"library(lifelihood) library(tidyverse)  df <- lifelihood::fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 logLik(results) #> [1] -594.6025"},{"path":"https://nrode.github.io/Lifelihood/reference/make_design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the design matrix — make_design_matrix","title":"Make the design matrix — make_design_matrix","text":"Create design matrix expected death survival shape.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/make_design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the design matrix — make_design_matrix","text":"","code":"make_design_matrix(covariates, data)"},{"path":"https://nrode.github.io/Lifelihood/reference/map_parameter_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Associate the parameter name with the associated parameter — map_parameter_name","title":"Associate the parameter name with the associated parameter — map_parameter_name","text":"function takes name input returns match predefined list. element found match, error generated. function used determine parameter parameter estimate based .","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/map_parameter_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associate the parameter name with the associated parameter — map_parameter_name","text":"","code":"map_parameter_name(name)"},{"path":"https://nrode.github.io/Lifelihood/reference/map_parameter_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associate the parameter name with the associated parameter — map_parameter_name","text":"name character string representing element mapped.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/map_parameter_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Associate the parameter name with the associated parameter — map_parameter_name","text":"named list containing mapped value input element.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/map_parameter_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associate the parameter name with the associated parameter — map_parameter_name","text":"","code":"map_parameter_name(\"eff_expt_death_geno1\") #> Error in map_parameter_name(\"eff_expt_death_geno1\"): could not find function \"map_parameter_name\" map_parameter_name(\"eff_ratio_expt_death_geno1\") #> Error in map_parameter_name(\"eff_ratio_expt_death_geno1\"): could not find function \"map_parameter_name\" map_parameter_name(\"int_sex_ratio\") #> Error in map_parameter_name(\"int_sex_ratio\"): could not find function \"map_parameter_name\""},{"path":"https://nrode.github.io/Lifelihood/reference/parse_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing functions used to read the output file of the program — parse_output","title":"Parsing functions used to read the output file of the program — parse_output","text":"Find specific result output file lifelihood program, according element argument. function aggregator get_*() functions described .","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/parse_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing functions used to read the output file of the program — parse_output","text":"","code":"parse_output(lines, element, group_by_group = FALSE)  get_seeds(lines, group_by_group = FALSE)  get_likelihood(lines, group_by_group = FALSE)  get_param_ranges(lines)  get_ratio_max(lines)  get_effects(lines, group_by_group = FALSE)  get_mcmc(lines)"},{"path":"https://nrode.github.io/Lifelihood/reference/parse_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing functions used to read the output file of the program — parse_output","text":"lines Vector output file (.), element line file. element Name result parse. Must one 'seeds', 'likelihood', 'effects', 'parameter_ranges', 'ratio_max', 'mcmc'. group_by_group Boolean indicating whether parsing performed group group (FALSE default). argument necessary structure output file different depending whether analysis carried \"group group\" (analysis method used different, certain parsers).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/parse_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing functions used to read the output file of the program — parse_output","text":"parsed element","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/plot_mortality_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Display evolution of predicted mortality rate — plot_mortality_rate","title":"Display evolution of predicted mortality rate — plot_mortality_rate","text":"Useful function creating good-quality line graph changes predicted mortality rate. want control style graph, use pred_mortality_rate() function retrieve data. Useful function creating good-quality line graph changes empirical mortality rate. need fit lifelihood() use function, retrieve lifelihood data object lifelihoodData() want control style graph, use compute_mortality_rate() function retrieve data. Convenient function used plot_observed_mortality_rate() plot_fitted_mortality_rate().","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/plot_mortality_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display evolution of predicted mortality rate — plot_mortality_rate","text":"","code":"plot_fitted_mortality_rate(   lifelihoodResults,   interval_width,   newdata = NULL,   max_time = NULL,   groupby = NULL,   use_facet = FALSE,   log_x = FALSE,   log_y = FALSE,   title = \"Mortality rate over time\",   xlab = \"Time\",   ylab = \"Mortality Rate\" )  plot_observed_mortality_rate(   lifelihoodData,   interval_width,   max_time = NULL,   min_sample_size = 1,   groupby = NULL,   use_facet = FALSE,   log_x = FALSE,   log_y = FALSE,   title = \"Mortality rate over time\",   xlab = \"Time\",   ylab = \"Mortality Rate\" )  plot_mortality_rate(   rate_df,   max_time,   groupby,   use_facet,   log_x,   log_y,   title,   xlab = \"Time\",   ylab = \"Mortality rate\" )"},{"path":"https://nrode.github.io/Lifelihood/reference/plot_mortality_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display evolution of predicted mortality rate — plot_mortality_rate","text":"lifelihoodResults output lifelihood() interval_width interval width used calculate mortality rate. instance, time unit deaths original dataset days interval_width set 10, mortality rate calculated every 10 days group. newdata Data prediction. absent, predictions subjects used original fit. max_time maximum time calculating mortality rate. set NULL, time last observed death used. groupby covariate(s) mortality rate computed (default NULL). NULL, calculates single overall mortality rate. \"\", calculates mortality rate combination covariates listed thelifelihoodData object provided. Otherwise must character (\"covariate1\") character vector (c(\"covariate1\", \"covariate2\")). use_facet Use facet_wrap plot one panel per group (default=FALSE) log_x Determine whether x-axis displayed logarithmic scale log_y Determine whether y-axis displayed logarithmic scale lifelihoodData lifelihoodData object created lifelihoodData(). min_sample_size minimum number individuals alive beggining time interval computing observed mortality rate rate_df Dataframe mortality rate, obtained via mortality_rate_data()","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/plot_mortality_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display evolution of predicted mortality rate — plot_mortality_rate","text":"ggplot2 plot ggplot2 plot ggplot2 plot","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/plot_mortality_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display evolution of predicted mortality rate — plot_mortality_rate","text":"function requires ggplot2 installed. function requires ggplot2 installed.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/pred_mortality_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute predicted mortality rate — pred_mortality_rate","title":"Compute predicted mortality rate — pred_mortality_rate","text":"Calculate predicted mortality rate given interval.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/pred_mortality_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute predicted mortality rate — pred_mortality_rate","text":"","code":"pred_mortality_rate(   lifelihoodResults,   interval_width,   newdata = NULL,   max_time = NULL,   groupby = NULL )"},{"path":"https://nrode.github.io/Lifelihood/reference/pred_mortality_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute predicted mortality rate — pred_mortality_rate","text":"lifelihoodResults output lifelihood() interval_width interval width used calculate mortality rate. instance, time unit deaths original dataset days interval_width set 10, mortality rate calculated every 10 days group. newdata Data prediction. absent, predictions subjects used original fit. max_time maximum time calculating mortality rate. set NULL, time last observed death used. groupby covariate(s) mortality rate computed (default NULL). NULL, calculates single overall mortality rate. \"\", calculates mortality rate combination covariates listed thelifelihoodData object provided. Otherwise must character (\"covariate1\") character vector (c(\"covariate1\", \"covariate2\")).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/pred_mortality_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute predicted mortality rate — pred_mortality_rate","text":"dataframe 3 columns: Interval (time interval, based interval_width value) Group (identifier given subgroup, \"Overall\" groupby = FALSE) MortalityRate (mortality rate time).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction with lifelihood estimations — prediction","title":"Prediction with lifelihood estimations — prediction","text":"S3 method use make prediction using fitted results lifelihood().","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction with lifelihood estimations — prediction","text":"","code":"prediction(   object,   parameter_name,   newdata = NULL,   type = c(\"link\", \"response\"),   se.fit = FALSE )"},{"path":"https://nrode.github.io/Lifelihood/reference/prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction with lifelihood estimations — prediction","text":"object output lifelihood() parameter_name string specifying name parameter make prediction. Must one unique(lifelihoodResults$effects$parameter). newdata Data prediction. absent, predictions subjects used original fit. type type predicted value: \"response,\" original data scale; \"link,\" lifelihood scale. se.fit Whether include standard errors prediction.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction with lifelihood estimations — prediction","text":"vector containing predicted values parameter.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction with lifelihood estimations — prediction","text":"","code":"df <- fakesample |>   mutate(     geno = as.factor(geno),     type = as.factor(type)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config2\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0  predict(results, \"expt_death\") #> Error in UseMethod(\"predict\"): no applicable method for 'predict' applied to an object of class \"lifelihoodResults\" predict(results, \"expt_death\", type = \"response\") #> Error in UseMethod(\"predict\"): no applicable method for 'predict' applied to an object of class \"lifelihoodResults\"  # predict on new data newdata <- data.frame(   type = c(1, 2, 0, 1, 2, 0),   geno = c(0, 1, 0, 1, 0, 1) ) newdata$type <- factor(newdata$type) newdata$geno <- factor(newdata$geno) predict(results, \"expt_death\", newdata) #> Error in UseMethod(\"predict\"): no applicable method for 'predict' applied to an object of class \"lifelihoodResults\" predict(results, \"expt_death\", newdata, type = \"response\") #> Error in UseMethod(\"predict\"): no applicable method for 'predict' applied to an object of class \"lifelihoodResults\""},{"path":"https://nrode.github.io/Lifelihood/reference/read_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Read formula from config file — read_formula","title":"Read formula from config file — read_formula","text":"Read formula config file","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/read_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read formula from config file — read_formula","text":"","code":"read_formula(config, parameter)"},{"path":"https://nrode.github.io/Lifelihood/reference/read_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read formula from config file — read_formula","text":"parameter name parameter","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/read_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read formula from config file — read_formula","text":"Formula","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/read_output_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and format the output file of the program — read_output_from_file","title":"Read and format the output file of the program — read_output_from_file","text":"Takes file path output file read results using parsers parse_output().","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/read_output_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and format the output file of the program — read_output_from_file","text":"","code":"read_output_from_file(file_path, group_by_group = FALSE, covariates = NULL)"},{"path":"https://nrode.github.io/Lifelihood/reference/read_output_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and format the output file of the program — read_output_from_file","text":"file_path Location output file program group_by_group Boolean option fit full factorail model interactions factors","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/read_output_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and format the output file of the program — read_output_from_file","text":"object class lifelihoodResults results output file","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/remove_lifelihood_tempfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all lifelihood temporary files — remove_lifelihood_tempfiles","title":"Remove all lifelihood temporary files — remove_lifelihood_tempfiles","text":"default, lifelihood() deletes temp files creates, users can set delete_temp_files=FALSE keep . multiple runs, can lots temp files. function just remove .","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/remove_lifelihood_tempfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all lifelihood temporary files — remove_lifelihood_tempfiles","text":"","code":"remove_lifelihood_tempfiles(path = \".\")"},{"path":"https://nrode.github.io/Lifelihood/reference/remove_lifelihood_tempfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all lifelihood temporary files — remove_lifelihood_tempfiles","text":"path look . Default current dir.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/remove_lifelihood_tempfiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove all lifelihood temporary files — remove_lifelihood_tempfiles","text":"","code":"remove_lifelihood_tempfiles()"},{"path":"https://nrode.github.io/Lifelihood/reference/safe_access.html","id":null,"dir":"Reference","previous_headings":"","what":"safe access — safe_access","title":"safe access — safe_access","text":"Safely access elements config file. function exists yaml.load_file() returns NULL value found instead raising error.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/safe_access.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"safe access — safe_access","text":"","code":"safe_access(config, path)"},{"path":"https://nrode.github.io/Lifelihood/reference/safe_access.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"safe access — safe_access","text":"config configuration object path event parameter read","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/safe_access.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"safe access — safe_access","text":"read value","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/summary.lifelihoodResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function to be used with the output of lifelihood() — summary.lifelihoodResults","title":"Summary function to be used with the output of lifelihood() — summary.lifelihoodResults","text":"S3 method display main results lifelihood program.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/summary.lifelihoodResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function to be used with the output of lifelihood() — summary.lifelihoodResults","text":"","code":"# S3 method for class 'lifelihoodResults' summary(object, ...)"},{"path":"https://nrode.github.io/Lifelihood/reference/summary.lifelihoodResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function to be used with the output of lifelihood() — summary.lifelihoodResults","text":"object output lifelihood() ... Ignored","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/summary.lifelihoodResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function to be used with the output of lifelihood() — summary.lifelihoodResults","text":"","code":"library(lifelihood) library(tidyverse)  df <- fakesample |>   mutate(     geno = as.factor(geno),     type = as.factor(type)   ) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 death_start death_end #> 1           NA            NA          NA           NA         0.1         1 #> 2            4             2           4            5         9.0        10 #> 3            5            NA          NA           NA         5.0         6 #> 4            5            NA          NA           NA         5.0         6 #> 5            5            NA          NA           NA         5.0         6 #> 6           NA            NA          NA           NA         0.1         1  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 summary(results) #> LIFELIHOOD RESULTS #>  #> Likelihood: #> [1] -594.6025 #>  #> Effects: #>                                       name  estimation stderror #> 1                           int_expt_death -11.9449429        0 #> 2                    eff_expt_death_geno_1 -12.2167414        0 #> 3                    eff_expt_death_type_1 -17.4578138        0 #> 4                    eff_expt_death_type_2  -9.5788906        0 #> 5                       int_survival_shape -12.4849939        0 #> 6                eff_survival_shape_geno_1 -19.7491969        0 #> 7                eff_survival_shape_type_1 -17.3748815        0 #> 8                eff_survival_shape_type_2   2.6682119        0 #> 9         eff_survival_shape_type_1:geno_1  -6.5460851        0 #> 10        eff_survival_shape_type_2:geno_1 -14.5649205        0 #> 11                    int_ratio_expt_death  -7.1006194        0 #> 12             eff_ratio_expt_death_geno_1  10.4608933        0 #> 13                          int_prob_death -10.4279891        0 #> 14                   eff_prob_death_geno_1 -11.3766401        0 #> 15                       int_expt_maturity   0.4246114        0 #> 16                eff_expt_maturity_geno_1  -0.5987078        0 #> 17                eff_expt_maturity_type_1  10.2893645        0 #> 18                eff_expt_maturity_type_2  -1.0230025        0 #> 19                      int_maturity_shape -19.5699810        0 #> 20               eff_maturity_shape_geno_1  -7.1923330        0 #> 21                 int_ratio_expt_maturity  14.5293003        0 #> 22          eff_ratio_expt_maturity_geno_1   8.0512975        0 #> 23          eff_ratio_expt_maturity_type_1  -2.0374967        0 #> 24          eff_ratio_expt_maturity_type_2  -7.0457527        0 #> 25                   int_expt_reproduction  -1.5884860        0 #> 26            eff_expt_reproduction_geno_1  11.6826788        0 #> 27                               int_pontn  -8.8326239        0 #> 28                        eff_pontn_geno_1 -19.9999601        0 #> 29               int_increase_death_hazard   9.3567346        0 #> 30        eff_increase_death_hazard_geno_1 -17.1122105        0 #> 31        eff_increase_death_hazard_type_1   4.6742563        0 #> 32        eff_increase_death_hazard_type_2  10.6544722        0 #> 33 eff_increase_death_hazard_type_1:geno_1  17.7414034        0 #> 34 eff_increase_death_hazard_type_2:geno_1   3.1766257        0 #> 35                  int_tof_reduction_date  -5.0608854        0 #> 36           eff_tof_reduction_date_geno_1  17.0587281        0 #> 37            int_increase_tof_n_offspring  -7.7631429        0 #> 38     eff_increase_tof_n_offspring_geno_1   1.0542894        0 #> 39                 int_lin_decrease_hazard   3.7536999        0 #> 40          eff_lin_decrease_hazard_geno_1   6.3045810        0 #> 41          eff_lin_decrease_hazard_type_1  -9.9093761        0 #> 42          eff_lin_decrease_hazard_type_2  10.2707608        0 #> 43   eff_lin_decrease_hazard_type_1:geno_1  10.5169971        0 #> 44   eff_lin_decrease_hazard_type_2:geno_1 -16.5269890        0 #> 45                     int_quad_senescence  16.0191401        0 #> 46              eff_quad_senescence_geno_1 -17.9411463        0 #> 47                int_quad_decrease_hazard -13.4062494        0 #> 48         eff_quad_decrease_hazard_geno_1  16.4551575        0 #> 49             int_quad_change_n_offspring   2.8626095        0 #> 50      eff_quad_change_n_offspring_geno_1  -1.0616118        0 #> 51                     int_tof_n_offspring  -5.2294123        0 #>                   parameter        kind        event #> 1                expt_death   intercept    mortality #> 2                expt_death coefficient    mortality #> 3                expt_death coefficient    mortality #> 4                expt_death coefficient    mortality #> 5            survival_shape   intercept    mortality #> 6            survival_shape coefficient    mortality #> 7            survival_shape coefficient    mortality #> 8            survival_shape coefficient    mortality #> 9            survival_shape coefficient    mortality #> 10           survival_shape coefficient    mortality #> 11         ratio_expt_death   intercept    mortality #> 12         ratio_expt_death coefficient    mortality #> 13               prob_death   intercept    mortality #> 14               prob_death coefficient    mortality #> 15            expt_maturity   intercept     maturity #> 16            expt_maturity coefficient     maturity #> 17            expt_maturity coefficient     maturity #> 18            expt_maturity coefficient     maturity #> 19           maturity_shape   intercept     maturity #> 20           maturity_shape coefficient     maturity #> 21      ratio_expt_maturity   intercept     maturity #> 22      ratio_expt_maturity coefficient     maturity #> 23      ratio_expt_maturity coefficient     maturity #> 24      ratio_expt_maturity coefficient     maturity #> 25        expt_reproduction   intercept reproduction #> 26        expt_reproduction coefficient reproduction #> 27                    pontn   intercept reproduction #> 28                    pontn coefficient reproduction #> 29    increase_death_hazard   intercept reproduction #> 30    increase_death_hazard coefficient reproduction #> 31    increase_death_hazard coefficient reproduction #> 32    increase_death_hazard coefficient reproduction #> 33    increase_death_hazard coefficient reproduction #> 34    increase_death_hazard coefficient reproduction #> 35       tof_reduction_date   intercept reproduction #> 36       tof_reduction_date coefficient reproduction #> 37 increase_tof_n_offspring   intercept reproduction #> 38 increase_tof_n_offspring coefficient reproduction #> 39      lin_decrease_hazard   intercept reproduction #> 40      lin_decrease_hazard coefficient reproduction #> 41      lin_decrease_hazard coefficient reproduction #> 42      lin_decrease_hazard coefficient reproduction #> 43      lin_decrease_hazard coefficient reproduction #> 44      lin_decrease_hazard coefficient reproduction #> 45          quad_senescence   intercept reproduction #> 46          quad_senescence coefficient reproduction #> 47     quad_decrease_hazard   intercept reproduction #> 48     quad_decrease_hazard coefficient reproduction #> 49  quad_change_n_offspring   intercept reproduction #> 50  quad_change_n_offspring coefficient reproduction #> 51          tof_n_offspring   intercept reproduction #>"},{"path":"https://nrode.github.io/Lifelihood/reference/translator.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Translator Object for Factor Encoding — translator","title":"Create a Translator Object for Factor Encoding — translator","text":"Creates translator object stores levels specified factor columns data frame. object can used encode decode factors integers. Converts factor columns data frame 0-based integers using levels stored translator object. Converts integer-encoded columns back factors using levels stored translator object. Parses text file replaces encoded factor labels (e.g., type0, geno1) original levels using translator object.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/translator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Translator Object for Factor Encoding — translator","text":"","code":"create_translator(df, cols)  encode(translator, df)  decode(translator, df_encoded)  decode_file_with_translator(output_path, translator)"},{"path":"https://nrode.github.io/Lifelihood/reference/translator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Translator Object for Factor Encoding — translator","text":"df data frame containing columns used create translator. cols character vector column names df translated. columns must factors. translator translator object created create_translator, names correspond encoded labels decoded (e.g., \"type\", \"geno\"). df_encoded data frame containing integer-encoded columns. output_path Path text file decode. file modified -place.","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/translator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Translator Object for Factor Encoding — translator","text":"named list levels specified column, class \"translator\". copy input data frame specified factor columns encoded integers. copy input data frame specified columns converted back factors. new output_path","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/translator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Translator Object for Factor Encoding — translator","text":"","code":"df <- data.frame(   type = factor(c(\"A\", \"B\", \"A\")),   geno = factor(c(\"X\", \"Y\", \"X\")) ) translator <- create_translator(df, c(\"type\", \"geno\")) #> Error in create_translator(df, c(\"type\", \"geno\")): could not find function \"create_translator\""},{"path":"https://nrode.github.io/Lifelihood/reference/validate_groupby_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the groupby argument is valid — validate_groupby_arg","title":"Check that the groupby argument is valid — validate_groupby_arg","text":"Check groupby expected value, returns ","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/validate_groupby_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the groupby argument is valid — validate_groupby_arg","text":"","code":"validate_groupby_arg(lifelihoodData, groupby)"},{"path":"https://nrode.github.io/Lifelihood/reference/validate_groupby_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that the groupby argument is valid — validate_groupby_arg","text":"lifelihoodData lifelihoodData object created lifelihoodData(). groupby covariate(s) mortality rate computed (default NULL). NULL, calculates single overall mortality rate. \"\", calculates mortality rate combination covariates listed thelifelihoodData object provided. Otherwise must character (\"covariate1\") character vector (c(\"covariate1\", \"covariate2\")).","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/validate_groupby_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that the groupby argument is valid — validate_groupby_arg","text":"valid groupby value","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/vcov.lifelihoodResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance matrix — vcov.lifelihoodResults","title":"Covariance matrix — vcov.lifelihoodResults","text":"S3 method retrieve covariance matrix output lifelihood()","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/vcov.lifelihoodResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance matrix — vcov.lifelihoodResults","text":"","code":"# S3 method for class 'lifelihoodResults' vcov(object, ...)"},{"path":"https://nrode.github.io/Lifelihood/reference/vcov.lifelihoodResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance matrix — vcov.lifelihoodResults","text":"object output lifelihood() ... Ignored","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/vcov.lifelihoodResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance matrix — vcov.lifelihoodResults","text":"covariance matrix","code":""},{"path":"https://nrode.github.io/Lifelihood/reference/vcov.lifelihoodResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance matrix — vcov.lifelihoodResults","text":"","code":"library(lifelihood) library(tidyverse)  df <- lifelihood::fakesample |>   mutate(     type = as.factor(type),     geno = as.factor(geno)   )  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"death_start\",   death_end = \"death_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = get_config_path(\"config\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) #> lifelihood Pascal program status code 0 vcov(results) #> NULL"}]
